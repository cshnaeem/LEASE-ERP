@using AGEERP.Models
@{
    ViewBag.Title = "Stock at Branch";
}
<div class="card ihead">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">Stock at Branch</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/Home/Index">Home</a></li>
                    <li class="breadcrumb-item active">Stock at Branch</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div id="frmM">
            <div class="row">
                <div class="col-md-4 col-sm-4">
                    @Html.Label("Location")
                    @(Html.Kendo()
                    .MultiColumnComboBox()
                    .Name("LocId")
                    .DataValueField("LocId")
                    .DataTextField("LocName")
                    .SelectedIndex(0)
                    .Columns(columns =>
                    {
                        columns.Add().Field("LocCode").Width("100px");
                        columns.Add().Field("LocName").Width("200px");
                    })
                    .FilterFields(new string[] { "LocCode", "LocName" })
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("LocationList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%", @required = true })
                    )
                </div>
                <div class="col-md-4 col-sm-4">
                    @Html.Label("Company")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("ComId")
                    .OptionLabel("Select Company")
                    .DataValueField("ComId")
                    .DataTextField("ComName")
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("CompanyList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%", @required="required" })
                    )
                </div>
                <div class="col-md-4 col-sm-4">
                    @Html.Label("Product")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("ProductId")
                    .OptionLabel("Select Product")
                    .SelectedIndex(0)
                    .DataValueField("ProductId")
                    .DataTextField("Name")
                    .CascadeFrom("ComId")
                    .Events(e => e.Change("LoadModel"))
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("ProductByCompList", "Setup").Data("filterProduct"))
                        .ServerFiltering(true);
                    })
                    .HtmlAttributes(new { @style = "width:100%", @required = "required" })
                    )
                </div>
                <div class="col-md-4 col-sm-4">
                    @Html.Label("Model")
                    @(Html.Kendo().ComboBox()
                      .Name("ModelId")
                      .HtmlAttributes(new { style = "width:100%;" })
                      .Placeholder("Select Model")
                      .DataValueField("ModelId")
                    .DataTextField("Model")
                      .Filter(FilterType.Contains)
                     .DataSource(ds =>
                     {
                         ds.Read(read => read.Action("ModelByComProList", "Setup").Data("filterModel"))
                         .ServerFiltering(true);
                     })
                    .HtmlAttributes(new { @style = "width:100%", @class = "browser-default", @required = "required" })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("ProductId")
                )
                </div>
                <div class="col-md-4 col-sm-4">
                    @Html.Label("SKU")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("SKUId")
                    .OptionLabel("All")
                    .DataValueField("SKUId")
                    .DataTextField("SKUName")
                    .CascadeFrom("ModelId")
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("SKUByModelList", "Setup").Data("filterSKU"))
                    .ServerFiltering(true);
                    })
                    .HtmlAttributes(new { @style = "width:100%", @required = true })
                    )
                </div>
                <div class="col-md-4 col-sm-4">
                    <br />
                    <button class="k-button margin-10" type="button" onclick="loadGrid()">
                        <i class="fas fa-arrow-right"></i>&nbsp; Load Stock
                    </button>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    @(Html.Kendo()
                          .Grid<BranchStockVM>()
                          .Name("stockAtBranch")
                          .Columns(columns =>
                          {
                              columns.Bound(c => c.LocCode);
                              columns.Bound(c => c.LocName);
                              columns.Bound(c => c.SKUCode);
                              columns.Bound(c => c.Qty);
                              columns.Bound(c => c.Distance);
                          })
                          .ToolBar(t => t.Search())
                          .Pageable()
                          .Sortable()
                          .Scrollable()
                          .AutoBind(false)
                          .HtmlAttributes(new { style = "height:500px;" })
                          .DataSource(dataSource => dataSource
                          .Ajax()
                          .ServerOperation(false)
                          .PageSize(20)
                          .Read(read => read.Action("StockAtBranch_Read", "Stock").Data("filterRecords"))
                          ))
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function LoadModel() {
        $('#ModelId').data('kendoComboBox').dataSource.read();
    }
    function ModelData() {
        return {
            ComId: $('#ComId').val(),
            ProductId: $('#ProductId').val() || 0
        }
    }
    function filterRecords() {
        return {
            LocId: $("#LocId").val() || 0,
            ModelId: $("#ModelId").val() || 0,
            SKUId: $("#SKUId").val() || 0,
        }
    }
    function loadGrid() {
        $("#stockAtBranch").data("kendoGrid").dataSource.read();
    }
    function filterSKU() {
        return {
            ModelId: $('#ModelId').val()
        }
    }
    function filterProduct() {
        return {
            ComId: $('#ComId').val()
        }
    } function filterModel() {
        return {
            ComId: $('#ComId').val(),
            ProductId: $('#ProductId').val()
        }
    }
</script>

