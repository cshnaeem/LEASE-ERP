@using AGEERP.Models
@{
    ViewBag.Title = "Cash Sale Search";
}
<style>
    .modal {
        position: fixed;
        right: 0;
        left: 0;
        display: none;
        overflow-y: auto;
        width: 78%;
        max-height: 80%;
        margin: auto;
        padding: 0;
        border-radius: 2px;
        background-color: #fafafa;
        will-change: top, opacity;
    }
</style>
<div class="card">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">Sale Search</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Sale</a></li>
                    <li class="breadcrumb-item active">Sale Search</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="col-lg-12 col-md-12 col-xs-12">
        <div class="row">
            <div class="col-md-3">
                @Html.Label("From Date")
                @Html.Kendo().DatePicker().Name("FromDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%" })
            </div>
            <div class="col-md-3">
                @Html.Label("To Date")
                @Html.Kendo().DatePicker().Name("ToDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%" })
            </div>
            <div class="col-md-3">
                @Html.Label("Location")
                @(Html.Kendo()
                        .MultiColumnComboBox()
                    .Name("LocId")
                    .Placeholder("Select Locations ...")
                    .DataValueField("LocId")
                    .DataTextField("LocName")
                    //.SelectedIndex(0)
                    .Columns(columns =>
                    {
                        columns.Add().Field("LocCode").Width("100px");
                        columns.Add().Field("LocName").Width("200px");
                    })
                    .FilterFields(new string[] { "LocCode", "LocName" })
                    .Filter(FilterType.Contains)
                        .DataSource(ds =>
                        {
                            ds.Read(read => read.Action("LocationList", "Setup"));
                        })
                        .HtmlAttributes(new { @style = "width:100%" })
                )
            </div>

            <div class="col-md-3">
                <br />
                <button class="k-button margin-10" type="button" onclick="ShowDashboardIBStock()">
                    <i class="fas fa-print"></i>&nbsp; Show
                </button>
            </div>

        </div>
        <div class="row">
            @(Html.Kendo()
            .Grid<CashSaleVM>()
            .Name("gridcashsale")
            .Columns(columns =>
            {
                columns.Template(t => { }).Title("#").ClientTemplate(
                      "#= renderNumber(data) #"
                 ).Width(100);
                columns.Bound(c => c.Type);
                columns.Bound(c => c.BillNo);
                columns.Bound(c => c.USIN);
                columns.Bound(c => c.FBR);
                columns.Bound(c => c.Customer);
                columns.Bound(c => c.Mobile);
                 columns.Bound(c => c.IsReturn);
                columns.Bound(c => c.CNIC);
                columns.Bound(c => c.Amount);
                columns.Command(c => { c.Custom("Re-Print").Click("PrintDoc"); }).Width(100);
            })
            .Sortable()
            .Pageable()
            .Scrollable()
            .ToolBar(t => { t.Search(); })
            .Search(s => { s.Field(a => a.Customer);s.Field(a => a.Mobile);s.Field(a => a.CNIC); s.Field(a => a.USIN); s.Field(a => a.BillNo); s.Field(a => a.FBR); })
            //.AutoBind(false)
            .Navigatable()
            .HtmlAttributes(new { style = "height:300px;" })
            .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(100)
            .Model(model =>
            {
                model.Id(m => m.TransId);
                model.Field(m => m.BillNo);
                model.Field(m => m.USIN);
                model.Field(m => m.FBR);
                model.Field(m => m.Customer);
                model.Field(m => m.Mobile);
                model.Field(m => m.CNIC);
                model.Field(m => m.Amount);
            })
            .Read(read => read.Action("CashSale_Read", "Sale").Data("FormatData"))
            ))
        </div>
    </div>
</div>
@Html.Partial("~/Views/Report/_Report.cshtml")
<script>
    $(document).ready(function () {
        //$('#m_18000000').addClass('active');
        //$('#d_18000000').css("display", "block");
        //$('#m_18060000').addClass('active');
        //$('#a_18060000').addClass('active');
        resizeGrid();

    });

    var gridElement = $("#gridcashsale");
    var rowNumber = 0;
    function resetRowNumber(e) {
        rowNumber = 0;
    }
    function PrintDoc(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        if (dataItem.Type == "Cash") {
            $("#rpt").val("CashSaleTax");
        }
        else if (dataItem.Type == "Lease") {
            $("#rpt").val("InstSaleTax");
        }
        else if (dataItem.Type == "LeaseReturn") {
            $("#rpt").val("InstSaleReturnTax");
        }
        $("#TransId").val(dataItem.TransId);
        $("#rptForm").submit();

    }

    function renderNumber(data) {
        return ++rowNumber;
    }

    function ShowDashboardIBStock() {
        $("#gridcashsale").data("kendoGrid").dataSource.read();
    }
    function FormatData() {
        return {
            FromDate: $('#FromDate').val(),
            ToDate: $('#ToDate').val(),
            LocId: $('#LocId').val()
        }
    }
    function GetDocID() {
        return {
            docid: $('#DocId').val()
        }
    }
    function resizeGrid() {
        var height = $(window).innerHeight() - $('header').innerHeight() - 180;
        if (height < 200) {
            height = 200;
        }
        else if (height > 910) {
            height = 910;
        }
        $("#gridcashsale").css("height", height);
        gridElement.data("kendoGrid").resize();
    }
    //function DeleteDetail(e) {
    //    e.preventDefault();
    //    var grid = this;
    //    var row = $(e.currentTarget).closest("tr");
    //    var data = this.dataItem(row);
    //    data.dirty = true;
    //    grid.dataSource.remove(data);
    //    grid.dataSource.sync();
    //}

    $(window).resize(function () {
        resizeGrid();
    });

</script>

