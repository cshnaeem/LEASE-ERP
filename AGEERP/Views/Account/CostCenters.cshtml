@using AGEERP.Models
@{
    ViewBag.Title = "CostCenters";
}
<div class="card">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">Cost Centers</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/Account">Account</a></li>
                    <li class="breadcrumb-item active">Cost Centers</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="card-body">
        @(Html.Kendo()
       .Grid<CostCentersVM>()
       .Name("gridCostCenters")
       .Columns(columns =>
       {
       columns.Bound(c => c.CCCode).Filterable(false).Hidden();
       columns.Bound(c => c.CCDesc).Title("Cost Center");
       columns.ForeignKey(c => c.LocId, (System.Collections.IEnumerable)ViewData["LocVD"], "LocId", "LocName").Title("Location");
       columns.Command(c => { c.Edit(); c.Destroy(); }).Width(250);
       })
       .Pageable()
       .Sortable()
       .Scrollable()
       .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
       .ToolBar(t => t.Create())
       .Editable(e => e.Mode(GridEditMode.InLine))
       .HtmlAttributes(new { style = "height:400px;" })
       .DataSource(dataSource => dataSource
       .Ajax()
       .PageSize(20)
       .Events(e => e.Error("error_handler"))
       .Model(model =>
       {
       model.Id(m => m.CCCode);
       })
       .Read(read => read.Action("CostCenters_Read", "Account"))
       .Create(create => create.Action("CostCenters_Create", "Account"))
       .Update(update => update.Action("CostCenters_Update", "Account"))
       .Destroy(update => update.Action("CostCenters_Destroy", "Account"))
       ))
    </div>
</div>


<script type="text/javascript">
    var gridElement = $("#gridCostCenters");
    $(document).ready(function () {
        resizeGrid();
        //$('#m_15000000').addClass('active');
        //$('#d_15000000').css("display", "block");
        //$('#m_15020000').addClass('active');
        //$('#a_15020000').addClass('active');
    })

    function resizeGrid() {
        var height = $(window).innerHeight() - $('header').innerHeight() - 180;
        if (height < 200) {
            height = 200;
        }
        else if (height > 910) {
            height = 910;
        }
        $("#gridCostCenters").css("height", height);
        gridElement.data("kendoGrid").resize();
    }

    $(window).resize(function () {
        resizeGrid();
    });
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            var dia = $("#msgBox").data("kendoDialog");
            dia.title("Error");
            dia.content(message);
            dia.open();
        }
    }
</script>
