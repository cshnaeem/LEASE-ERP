
@{
    ViewBag.Title = "Location Wise PO Report";
}
<div class="card">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">Location Wise PO Report</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Reports</a></li>
                    <li class="breadcrumb-item active">Location Wise PO Report</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("POLocationWise", "Report", FormMethod.Post, new { target = "_blank" }))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Schedule From Date")
                    @Html.Kendo().DatePicker().Name("FromDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%" })
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Schedule To Date")
                    @Html.Kendo().DatePicker().Name("ToDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%" })
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("PONo")
                    @Html.Kendo().TextBox().Name("PONo").HtmlAttributes(new { @style = "width:100%" })
                </div>
                
            </div>
            <div class="row">
                <div class="col-md-3 col-sm-3">
                    @Html.Label("City")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("CityId")
                    .OptionLabel("All")
                    .DataValueField("CityId")
                    .DataTextField("City")
                    .Events(e => e.Change("loadLocation"))
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                    ds.Read(read => read.Action("CityList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Location")
                    @(Html.Kendo()
                    .MultiColumnComboBox()
                    .Name("LocId")
                    .Placeholder("All Locations ...")
                    .DataValueField("LocId")
                    .DataTextField("LocName")
                    .Columns(columns =>
                    {
                        columns.Add().Field("LocCode").Width("100px");
                        columns.Add().Field("LocName").Width("200px");
                    })
                    .FilterFields(new string[] { "LocCode", "LocName" })
                    .Filter(FilterType.Contains)
                    //.CascadeFrom("CityId")
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("LocationByCityList", "Setup").Data("filterCity"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Supplier")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("SuppId")
                    .OptionLabel("All")
                    .SelectedIndex(0)
                    .DataValueField("SuppId")
                    .DataTextField("SuppName")
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                    ds.Read(read => read.Action("SupplierList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%;" })
                    )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Company")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("ComId")
                    .OptionLabel("All")
                    .DataValueField("ComId")
                    .DataTextField("ComName")
                    .SelectedIndex(0)
                    .Events(e => e.Change("LoadModel"))
                    //.Events(e => e.Change("LoadProduct"))
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("CompanyList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                    )

                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Product")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("ProductId")
                    .OptionLabel("All")
                    .SelectedIndex(0)
                    .DataValueField("ProductId")
                    .DataTextField("Name")
                    .Events(e => e.Change("LoadModel"))
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("ProductList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Model")
                    @(Html.Kendo().DropDownList()
                      .Name("ModelId")
                      .HtmlAttributes(new { style = "width:100%;" })
                      .OptionLabel("All")
                      .DataValueField("ModelId")
                        .DataTextField("Model")
                    .Events(e => e.Change("LoadSKU"))
                      .Filter(FilterType.Contains)
                     .DataSource(ds =>
                     {
                         ds.Read(read => read.Action("ModelByComProList", "Setup").Data("filterModel"));
                     })
                    .HtmlAttributes(new { @style = "width:100%", @class = "browser-default" })
                      .AutoBind(false)
                )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("SKU")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("SKUId")
                    .DataValueField("SKUId")
                    .DataTextField("SKUName")
                    .OptionLabel("All")
                    .SelectedIndex(0)
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("SKUByModelList", "Setup").Data("filterSKU"));
                    })
                    .HtmlAttributes(new { @style = "width:100%"})
                    )
                </div>
                <div class="col-md-3 col-sm-3">
                    <br />
                    <br />
                    @(Html.Kendo().CheckBox().Name("IsPending").Label("Pending Only"))
                </div>
                <div class="col-md-3 col-sm-3">
                    <br />
                    <button class="k-button k-primary" type="submit">
                        <i class="fas fa-print"></i>&nbsp; Print Report
                    </button>
                </div>
            </div>
        }
    </div>
</div>
<script>
    function LoadProduct() {
        $('#ProductId').data('kendoDropDownList').dataSource.read();
    }
    function LoadModel() {
        $('#ModelId').data('kendoDropDownList').dataSource.read();
    }
    function LoadSKU() {
        $('#SKUId').data('kendoDropDownList').dataSource.read();
    }
    function loadLocation() {
        $('#LocId').data('kendoMultiColumnComboBox').dataSource.read();
    }
    function filterSKU() {
        return {
            ModelId: $('#ModelId').val()
        }
    }
    function filterType() {
        return {
            ComId: $('#ComId').val() || 0
        }
    }
    function filterProduct() {
        return {
            ComId: $('#ComId').val()
        }
    }
    function filterCity() {
        return {
            CityId: $('#CityId').val() || 0
        }
    }
    function filterModel() {
        return {
            ComId: $('#ComId').val(),
            ProductId: $('#ProductId').val()
        }
    }
</script>
