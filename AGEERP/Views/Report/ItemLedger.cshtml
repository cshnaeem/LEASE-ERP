
@{
    ViewBag.Title = "Item Ledger";
}

@using (Html.BeginForm("ItemLedger", "Report", FormMethod.Post, new { target = "_blank" }))
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="content-header">
            <div class="card-header">
                <h3 class="card-title">@ViewBag.rptTitle</h3>
                <div class="card-tools">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Report</a></li>
                        <li class="breadcrumb-item active">@ViewBag.rptTitle</li>
                    </ol>
                </div>
            </div>
        </div>

        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="row">
                <div class="col-md-3 col-sm-4">
                    @Html.Label("Location")
                    @(Html.Kendo()
                    .MultiColumnComboBox()
                    .Name("LocId")
                    .Placeholder("Select Locations ...")
                    .DataValueField("LocId")
                    .DataTextField("LocName")
                    .SelectedIndex(0)
                    .Columns(columns =>
                    {
                        columns.Add().Field("LocCode").Width("100px");
                        columns.Add().Field("LocName").Width("200px");
                    })
                    .FilterFields(new string[] { "LocCode", "LocName" })
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                    ds.Read(read => read.Action("LocationList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%", @required = true })
                    )
                </div>
                <div class="col-md-3">
                    @Html.Label("From Date")
                    @Html.Kendo().DatePicker().Name("FromDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%", @required = true })
                </div>
                <div class="col-md-3">
                    @Html.Label("To Date")
                    @Html.Kendo().DatePicker().Name("ToDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%", @required = true })
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 col-xs-12" style="margin-top:-6px">
                    @Html.Label("Company")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("ComId")
                    .OptionLabel("Select Company ...")
                    .DataValueField("ComId")
                    .DataTextField("ComName")
                    .DataSource(ds =>
                    {
                    ds.Read(read => read.Action("CompanyList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%", required = true })
                    )
                </div>
                <div class="col-md-3 col-xs-12">
                    @Html.Label("Product")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("ProductId")
                    .OptionLabel("Select Product ...")
                    .DataValueField("ProductId")
                    .DataTextField("Name")
                    .CascadeFrom("ComId")
                    .DataSource(ds =>
                    {
                    ds.Read(read => read.Action("ProductByCompList", "Setup").Data("filterProduct"))
                    .ServerFiltering(true);
                    })
                    .HtmlAttributes(new { @style = "width:100%", required = true })
                    )
                </div>
                <div class="col-md-3 col-xs-12">
                    @Html.Label("Model")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("ModelId")
                    .OptionLabel("Select Model")
                    .DataValueField("ModelId")
                    .DataTextField("Model")
                    .CascadeFrom("ProductId")
                    .AutoBind(true)
                    .DataSource(ds =>
                    {
                    ds.Read(read => read.Action("ModelByComProList", "Setup").Data("filterModel"))
                    .ServerFiltering(true);
                    })
                    .HtmlAttributes(new { @style = "width:100%", required = true })
                    )
                </div>

                <div class="col-md-3 col-xs-12">
                    @Html.Label("SKU")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("SKUId")
                    .OptionLabel("Select SKU")
                    .DataValueField("SKUId")
                    .DataTextField("SKUName")
                    .CascadeFrom("ModelId")
                    .DataSource(ds =>
                    {
                    ds.Read(read => read.Action("SKUByModelList", "Setup").Data("filterSKU"))
                    .ServerFiltering(true);
                    })
                    .HtmlAttributes(new { @style = "width:100%", required = true })
                    )
                </div>
            </div>


            <div class="row">
                <div class="col-md-3">
                    <br />
                    <button class="k-button margin-10" type="submit">
                        <i class="fas fa-print"></i>&nbsp; Show
                    </button>
                </div>
            </div>

        </div>

    </div>

}
<script>
    function filterProduct() {
        return {
            ComId: $('#ComId').val() || 0
        }
    }
    function filterModel() {
        return {
            ComId: $('#ComId').val() || 0,
            ProductId: $('#ProductId').val() || 0
        }
    }
    function filterSKU() {
        return {
            ModelId: $('#ModelId').val() || 0
        }
    }
</script>

