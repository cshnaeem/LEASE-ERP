
@{
    ViewBag.Title = "Sale vs Target";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="card">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">Sale vs Target Report</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Reports</a></li>
                    <li class="breadcrumb-item active">Sale vs Target Report</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("SalevsTarget", "Report", FormMethod.Post, new { target = "_blank" }))
        {
            @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-md-4">
                @Html.Label("From Date")
                @Html.Kendo().DatePicker().Name("FromDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%" })
            </div>
            <div class="col-md-4">
                @Html.Label("To Date")
                @Html.Kendo().DatePicker().Name("ToDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%" })
            </div>
            @*<div class="col-md-4">
            @Html.Label("Month")
            @(Html.Kendo().DatePicker()
                .Name("Month")
                .Value(DateTime.Now.Date)
                .Start(CalendarView.Year)
                .Depth(CalendarView.Year)
                .Format("MMM yyyy")
                .HtmlAttributes(new { @style = "width:100%" }))
        </div>*@
            <div class="col-4">
                @Html.Label("City")
                @(Html.Kendo()
                    .DropDownList()
                    .Name("CityId")
                    .OptionLabel("All")
                    .DataValueField("CityId")
                    .DataTextField("City")
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                    ds.Read(read => read.Action("CityList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
            </div>
            <div class="col-4">
                @Html.Label("Location")
                @(Html.Kendo()
                    .MultiColumnComboBox()
                    .Name("LocId")
                    .Placeholder("All Locations ...")
                    .DataValueField("LocId")
                    .DataTextField("LocName")
                    .Columns(columns =>
                    {
                        columns.Add().Field("LocCode").Width("100px");
                        columns.Add().Field("LocName").Width("200px");
                    })
                    .FilterFields(new string[] { "LocCode", "LocName" })
                    .Filter(FilterType.Contains)
                    .CascadeFrom("CityId")
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("LocationByCityList", "Setup").Data("filterCity"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
            </div>
            <div class="col-4">
                @Html.Label("GM")
                @(Html.Kendo()
                    .DropDownList()
                    .Name("GMId")
                    .OptionLabel("All")
                    .DataValueField("GMId")
                    .DataTextField("GMName")
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                    ds.Read(read => read.Action("GMList", "Employee"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
            </div>
            <div class="col-4">
                @Html.Label("Type")
                @(Html.Kendo().DropDownList()
                  .Name("Type")
                  .DataTextField("Text")
                  .DataValueField("Value")
                  .BindTo(new List<SelectListItem>() {
                      new SelectListItem() {
                          Text = "Both",
                          Value = ""
                      },
                      new SelectListItem() {
                          Text = "Cash",
                          Value = "C"
                      },
                      new SelectListItem() {
                          Text = "Installment",
                          Value = "I"
                      }
                  })
                  .Value("1")
                  .HtmlAttributes(new { style = "width: 100%" })
            )
            </div>
                <div class="col-3">
                    @Html.Kendo().RadioButton().Name("rpt").Label("Sale Vs Target").Value("1").Checked(true)<br />
                    @Html.Kendo().RadioButton().Name("rpt").Label("For Payroll").Value("2")
                </div>
                <div class="col-3">
                    <br />
                    <button class="k-button margin-10" type="submit">
                        <i class="fas fa-print"></i>&nbsp; Show
                    </button>
                </div>
            </div>

            }
        </div>
</div>
<script>
    function filterCity() {
        return {
            CityId: $('#CityId').val() || 0
        }
    }
</script>


