
@{
    ViewBag.Title = "Sale Register Report";
}
    <div class="card">
        <div class="content-header">
            <div class="card-header">
                <h3 class="card-title">Sale Register Report</h3>
                <div class="card-tools">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Reports</a></li>
                        <li class="breadcrumb-item active">Sale Register Report</li>
                    </ol>
                </div>
            </div>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("SaleRegister", "Report", FormMethod.Post, new { target = "_blank" }))
            {
                @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-3 col-sm-3">
                    @Html.Label("From Date")
                    @Html.Kendo().DatePicker().Name("FromDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%" })
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("To Date")
                    @Html.Kendo().DatePicker().Name("ToDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%" })
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Category No")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("CatId")
                    .OptionLabel("All")
                    .DataValueField("CategoryId")
                    .DataTextField("CategoryTitle")
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("SuppliersCatList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("City")
                    @(Html.Kendo()
                .DropDownList()
                .Name("CityId")
                .OptionLabel("All")
                .DataValueField("CityId")
                .DataTextField("City")
                .Filter(FilterType.Contains)
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("CityList", "Setup"));
                })
                .HtmlAttributes(new { @style = "width:100%" })
                    )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Location")
                    @(Html.Kendo()
                .MultiColumnComboBox()
                .Name("LocId")
                .Placeholder("All Locations ...")
                .DataValueField("LocId")
                .DataTextField("LocName")
                .Columns(columns =>
                {
                    columns.Add().Field("LocCode").Width("100px");
                    columns.Add().Field("LocName").Width("200px");
                })
                .FilterFields(new string[] { "LocCode", "LocName" })
                .Filter(FilterType.Contains)
                .CascadeFrom("CityId")
                .DataSource(ds =>
                {
                    ds.Read(read => read.Action("LocationByCityList", "Setup").Data("filterCity"));
                })
                .HtmlAttributes(new { @style = "width:100%" })
                    )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Supplier")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("SuppId")
                    .OptionLabel("All")
                    .SelectedIndex(0)
                    .DataValueField("SuppId")
                    .DataTextField("SuppName")
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                    ds.Read(read => read.Action("SupplierList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%;" })
                    )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Company")
                    @(Html.Kendo()
                .DropDownList()
                .Name("ComId")
                .OptionLabel("All")
                .DataValueField("ComId")
                .DataTextField("ComName")
                .Filter(FilterType.Contains)
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("CompanyList", "Setup"));
                })
                .HtmlAttributes(new { @style = "width:100%" })
                    )

                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Type")
                    @(Html.Kendo()
                .DropDownList()
                .Name("TypeId")
                .OptionLabel("All")
                .DataValueField("TypeId")
                .DataTextField("Name")
                .Filter(FilterType.Contains)
                .CascadeFrom("ComId")
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("TypeByCompList", "Setup").Data("filterType"))
                .ServerFiltering(true);
                })
                .HtmlAttributes(new { @style = "width:100%" })
                    )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Product")
                    @(Html.Kendo()
                .DropDownList()
                .Name("ProductId")
                .OptionLabel("All")
                .DataValueField("ProductId")
                .DataTextField("Name")
                .Filter(FilterType.Contains)
                .CascadeFrom("TypeId")
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("ProductByTypeList", "Setup").Data("filterProduct"))
                .ServerFiltering(true);
                })
                .HtmlAttributes(new { @style = "width:100%" })
                    )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Model")
                    @(Html.Kendo()
                .DropDownList()
                .Name("ModelId")
                .OptionLabel("All")
                .DataValueField("ModelId")
                .DataTextField("Model")
                .Filter(FilterType.Contains)
                .CascadeFrom("ProductId")
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("ModelByTypeList", "Setup").Data("filterModel"))
                .ServerFiltering(true);
                })
                .HtmlAttributes(new { @style = "width:100%" })
                    )
                </div>

                <div class="col-md-6 col-sm-6">
                    <br /><br />
                    @Html.Kendo().RadioButton().Name("rpt").Label("Cash Sale").Value("CashSale").Checked(true)

                    @Html.Kendo().RadioButton().Name("rpt").Label("Lease Sale").Value("LeaseSale")
                </div>

                <div class="col-md-3 col-sm-3">
                    <br />
                    <button class="k-button k-primary" type="submit">
                        <i class="fas fa-print"></i>&nbsp; Print
                    </button>
                </div>
            </div>

            }
        </div>
    </div>
    <script>
    function filterType() {
        return {
            ComId: $('#ComId').val() || 0
        }
    }
    function filterProduct() {
        return {
            TypeId: $('#TypeId').val() || 0
        }
    }
    function filterCity() {
        return {
            CityId: $('#CityId').val() || 0
        }
    }
    function filterModel() {
        return {
            TypeId: $('#TypeId').val() || 0
        }
    }
    </script>