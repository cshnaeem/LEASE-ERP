
@{
    ViewBag.Title = "SaleDetail";
}

<div class="card">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">SaleDetail</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Reports</a></li>
                    <li class="breadcrumb-item active">SaleDetail</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("SaleDetailCustomized", "Report", FormMethod.Post, new { target = "_blank" }))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-3">
                    <label id="fDate">From Date</label>
                    @Html.Kendo().DatePicker().Name("FromDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%" })
                </div>
                <div class="col-3 tDive">
                    @Html.Label("To Date")
                    @Html.Kendo().DatePicker().Name("ToDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%" })
                </div>
                @*<div class="col-md-3 col-sm-3 iDive">
                    @Html.Label("Category")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("CategoryId")
                    .OptionLabel("All")
                    .DataValueField("CategoryId")
                    .DataTextField("CategoryTitle")
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("SuppliersCatList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
                </div>*@
            </div>
            <div class="row tDive">
                <div class="col-3">
                    @Html.Label("City")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("CityId")
                    .OptionLabel("All")
                    .DataValueField("CityId")
                    .DataTextField("City")
                    .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                    ds.Read(read => read.Action("CityList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
                </div>
                <div class="col-3">
                    @Html.Label("Location")
                    @(Html.Kendo()
                    .MultiColumnComboBox()
                    .Name("LocId")
                    .Placeholder("All Locations ...")
                    .DataValueField("LocId")
                    .DataTextField("LocName")
                    .Columns(columns =>
                    {
                        columns.Add().Field("LocCode").Width("100px");
                        columns.Add().Field("LocName").Width("200px");
                    })
                    .FilterFields(new string[] { "LocCode", "LocName" })
                    .Filter(FilterType.Contains)
                    .CascadeFrom("CityId")
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("LocationByCityList", "Setup").Data("filterCity"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                    )

                </div>

                <div class="col-md-3 col-sm-4">
                    @Html.Label("Supplier")
                    @(Html.Kendo()
                .DropDownList()
                .Name("SuppId")
                .OptionLabel("Select Supplier")
                .DataValueField("SuppId")
                .DataTextField("SuppName")
                //.Events(e => e.Change("LoadCompany"))
                .Filter(FilterType.Contains)
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("SupplierList", "Setup"));
                })
                .HtmlAttributes(new { @style = "width:100%;" })
                )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Company")
                    @(Html.Kendo()
                      .DropDownList()
                      .Name("ComId")
                      .OptionLabel("Select Company")
                      .DataValueField("ComId")
                      .DataTextField("ComName")
                      .Filter(FilterType.Contains)
                      .Events(e => e.Change("loadModel"))
                      //.Events(e => e.Change("LoadProduct"))
                      .DataSource(ds =>
                      {
                          ds.Read(read => read.Action("CompanyList", "Setup"));

                      })
                      .HtmlAttributes(new { @style = "width:100%"}))

                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Product")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("ProductId")
                    .OptionLabel("Select Product")
                    .DataValueField("ProductId")
                    .DataTextField("Name")
                    .Filter(FilterType.Contains)
                    .Events(e => e.Change("loadModel"))
                    .DataSource(ds =>
                    {
                        //ds.Read(read => read.Action("ProductByCompList", "Setup").Data("filterProduct"));
                        ds.Read(read => read.Action("ProductList", "Setup"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                )
                </div>
                <div class="col-md-3 col-sm-3">
                    @Html.Label("Model")
                    @(Html.Kendo()
                    .DropDownList()
                    .Name("ModelId")
                    .OptionLabel("Select Model")
                    .DataValueField("ModelId")
                    .DataTextField("Model")
                     .Filter(FilterType.Contains)
                    .DataSource(ds =>
                    {
                        ds.Read(read => read.Action("ModelByComProList", "Setup").Data("filterModel"));
                    })
                    .HtmlAttributes(new { @style = "width:100%" })
                )
                </div>
            </div>
            <div class="row">
                @*<div class="col-9">
                    <br />
                    @Html.Kendo().RadioButton().Name("rpt").Label("Cash Sale").Value("1").Checked(true)
                    @Html.Kendo().RadioButton().Name("rpt").Label("Cash Sale Disc").Value("4")
                    @Html.Kendo().RadioButton().Name("rpt").Label("Installment Sale").Value("2")
                    @Html.Kendo().RadioButton().Name("rpt").Label("Cash Sale Summary").Value("3")
                </div>*@
                <div class="col-3">
                    <br />
                    <button class="k-button k-primary" type="submit">
                        <i class="fas fa-print"></i>&nbsp; Print
                    </button>
                </div>
            </div>

        }
    </div>
</div>
<script>
    //$(document).ready(function () {
    //    $('input[type=radio][name=rpt]').change(function () {
    //        if (this.value == '3') {
    //            $(".tDive").css("visibility", "hidden");
    //            $("#fDate").text("Date");
    //        }
    //        else {
    //            $(".tDive").css("visibility", "visible");
    //            $("#fDate").text("From Date");
    //        }
    //        if (this.value == '2') {
    //            $(".iDive").css("visibility", "visible");
    //        }
    //        else {
    //            $(".iDive").css("visibility", "hidden");
    //        }
    //    });
    //});
    function loadModel() {
        $('#ModelId').data('kendoDropDownList').dataSource.read();
    }
    function filterCity() {
        return {
            CityId: $('#CityId').val() || 0
        }
    }
    function filterModel() {
        return {
            ComId: $('#ComId').val() || 0,
            ProductId: $('#ProductId').val() || 0
        }
    }
</script>