@using AGEERP.Models
@{
    ViewBag.Title = "SKU";
}
<style>
    .product-photo {
       /* display: inline-block;*/
        width: 100px;
        height: 100px;
/*        border-radius: 50%;
        background-size: 100px 100px;
        background-position: center center;
        vertical-align: middle;
        line-height: 100px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-right: 5px;*/
    }
</style>
<div class="card">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">SKU</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Setup</a></li>
                    <li class="breadcrumb-item active">SKU</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-3 col-sm-3" style="margin-top:-6px">
                @Html.Label("Company")
                @(Html.Kendo()
                .DropDownList()
                .Name("ComId")
                .Filter(FilterType.Contains)
                .OptionLabel("Select Company")
                .DataValueField("ComId")
                .DataTextField("ComName")
                .Filter(FilterType.Contains)
                .Events(e => e.Change("LoadProduct"))
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("CompanyList", "Setup"));
                })
                .HtmlAttributes(new { @style = "width:100%" })
                )

            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Product")
                @(Html.Kendo()
                .DropDownList()
                .Name("ProductId")
                .OptionLabel("Select Product")
                .DataValueField("ProductId")
                .DataTextField("Name")
                .Events(e => e.Change("LoadType"))
                .Filter(FilterType.Contains)
                .DataSource(ds =>
                {
                    ds.Read(read => read.Action("ProductByCompList", "Setup").Data("filterProduct"));
                })
                .HtmlAttributes(new { @style = "width:100%" })
                )
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Type")
                @(Html.Kendo()
                .DropDownList()
                .Name("TypeId")
                .OptionLabel("Select Type")
                .DataValueField("TypeId")
                .DataTextField("Name")
                .Events(e => e.Change("LoadModel"))
                .Filter(FilterType.Contains)
                .DataSource(ds =>
                {
                    ds.Read(read => read.Action("TypeList", "Setup").Data("filterComProduct"));
                })
                .HtmlAttributes(new { @style = "width:100%" })
                )
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Model")
                @(Html.Kendo()
                .DropDownList()
                .Name("ModelId")
                .OptionLabel("Select Model")
                .DataValueField("ModelId")
                .DataTextField("Model")
                  .Filter(FilterType.Contains)
                .Events(e => e.Change("LoadGrid"))
                .DataSource(ds =>
                {
                    ds.Read(read => read.Action("ModelByComProList", "Setup").Data("filterModel"));
                })
                .HtmlAttributes(new { @style = "width:100%" })
                )
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
        <div class="k-header k-grid-toolbar k-grid-top">
            <a class="float-right">
                @Html.Label("Status")
                @(Html.Kendo().DropDownList()
      .Name("StatusId")
      .SelectedIndex(0)
      .DataTextField("Text")
      .DataValueField("Value")
      .Events(x => x.Change("ReloadGrid"))
      .BindTo(ViewBag.Status)
      .HtmlAttributes(new { style = "width: 100%" }))
            </a>
        </div>
        @(Html.Kendo()
             .Grid<SKUVM>()
             .Name("gridSKU")
             .Columns(columns =>
             {
                 columns.Bound(c => c.SKUId).Width(50);
                 columns.Bound(c => c.SKUCode).ClientTemplate(
                    @"<img
                        src='../Content/SKUImg/#:data.SKUId#.jpg' style='width:100px;height:100px;' alt='No Image' />").Width(100);
                 columns.Bound(c => c.SKUName).Title("SKU").Width(100);
                 columns.ForeignKey(p => p.ColorId, (System.Collections.IEnumerable)ViewData["ColorVD"], "ColorId", "ColorName").Title("Color").Width(100);
                 columns.Bound(c => c.Specs).Width(100);
                 columns.Bound(c => c.Description).Width(200);
                 columns.Command(c => { c.Edit(); c.Destroy(); }).Width(100);
             })
             .Pageable()
             .Sortable()
             .Scrollable()
             .AutoBind(false)
             .ToolBar(t => t.Create())
             .Editable(e => e.Mode(GridEditMode.PopUp).TemplateName("_SKU"))
             .HtmlAttributes(new { style = "height:400px;" })
             .Events(e => e.Edit("onEdit"))
             .DataSource(dataSource => dataSource
             .Ajax()
             //.Batch(true)
             .PageSize(20)
             .Events(e => e.Error("error_handler"))
             .Model(model =>
             {
                 model.Id(m => m.SKUId);
             })
             .Read(read => read.Action("SKU_Read", "Setup").Data("ModelDataRead"))
             .Create(create => create.Action("SKU_Create", "Setup").Data("ModelData"))
             .Update(update => update.Action("SKU_Update", "Setup"))
             .Destroy(update => update.Action("SKU_Destroy", "Setup"))
             ))
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        var gridElement = $("#gridSKU");
        $(document).ready(function () {
            resizeGrid();
            //$('#m_10000000').addClass('active');
            //$('#d_10000000').css("display", "block");
            //$('#m_10010000').addClass('active');
            //$('#d_10010000').css("display", "block");
            //$('#m_10010500').addClass('active');
            //$('#a_10010500').addClass('active');
        });
        function LoadProduct() {
            $('#ProductId').data('kendoDropDownList').dataSource.read();
        }
        function ReloadGrid() {
            $("#gridSKU").data('kendoGrid').dataSource.read();
        }
        function LoadModel() {
            $('#ModelId').data('kendoDropDownList').dataSource.read();
        }

        function LoadType() {
            $('#TypeId').data('kendoDropDownList').dataSource.read();
        }

        function filterComProduct() {
            return {
                ComId: $('#ComId').val(),
                ProductId: $('#ProductId').val()
            }
        }
        function filterProduct() {
            return {
                ComId: $('#ComId').val()
                //ProductId: $('#ProductId').val()
            }
        }
        function filterModel() {
            return {
                ComId: $('#ComId').val(),
                ProductId: $('#ProductId').val()
            }
        }
        
        function GetStatus() {
            return {
                status: $('#StatusId').val()
            }
        }

        function ModelData() {
            console.log();
            return {
                Moodel: $('#ModelId').val()
                
            }
        }

        function ModelDataRead() {
            console.log();
            return {
                Moodel: $('#ModelId').val(),
                status: $('#StatusId').val()
            }
        }
        function LoadGrid() {
            $('#gridSKU').data('kendoGrid').dataSource.read();
        }

        function filterPair() {
            return {
                TypeId: $('#TypeId').val(),
                //ProductId: $('#ProductId').val()
            }
        }

        //function changeColor() {
        //    var col = $('#ColorId').val();
        //    var colList = $('#ColorId').data('kendoMultiSelect').dataSource.data();
        //    var spc = $('#Spec').val().split(',');
        //    var typ = $('#TypeId').data('kendoDropDownList').text();
        //    var mdl = $('#ModelId').data('kendoDropDownList').text();
        //    var skuList = [];
        //    skuList.push({ SKUName: typ +"_" + mdl,ColorId:0,Specs:"" });
        //    var skuName = skuList[0].SKUName;
        //    for (var c = 0; c < col.length; c++) {
        //        for (var cl = 0; cl < colList.length; cl++) {
        //            if (colList[cl].ColorId == col[c]) {
        //                if (c == 0) {
        //                    skuList[c].SKUName = skuName + "_" + colList[cl].ColorCode;
        //                    skuList[c].ColorId = col[c];
        //                }
        //                else {
        //                    skuList.push({ SKUName: skuName + "_" + colList[cl].ColorCode, ColorId: col[c], Specs:""});
        //                }
        //            }
        //        }
        //    }
        //    var ll = skuList.length;
        //    for (var l = 0; l < ll; l++) {
        //        var skuName = skuList[l].SKUName;
        //        var colorId = skuList[l].ColorId;
        //        for (var s = 0; s < spc.length; s++) {
        //            if (spc[s] != "") {
        //                if (s == 0) {
        //                    skuList[l].SKUName = skuName + "_" + spc[s];
        //                    skuList[l].Specs = spc[s];
        //                }
        //                else {
        //                    skuList.push({ SKUName: skuName + "_" + spc[s], ColorId: colorId, Specs: spc[s] });
        //                }
        //            }
        //        }
        //    }

        //    $('#gridSKU').data('kendoGrid').dataSource.data(skuList);
        //}

        function resizeGrid() {
            var height = $(window).innerHeight() - $('header').innerHeight() - 180;
            if (height < 200) {
                height = 200;
            }
            else if (height > 910) {
                height = 910;
            }
            $("#gridSKU").css("height", height);
            gridElement.data("kendoGrid").resize();
        }

        $(window).resize(function () {
            resizeGrid();
        });
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                var dia = $("#msgBox").data("kendoDialog");
                dia.title("Error");
                dia.content(message);
                dia.open();
            }
        }
        function onEdit(e) {
            var empId = e.container.find("input[name=SKUId]").val();
            var proId = $('#ProductId').data('kendoDropDownList').value();
            if (empId > 0) {
                $(".ImgDiv").show();
                $("#SkuImg").attr("src", "../../Content/SKUImg/" + empId + ".jpg");
            }
            else {
                $(".ImgDiv").hide();
            }

            if (proId == 342 || proId == 341) {

                $(".sku").show();

            } else {
                $(".sku").hide();
            }

        }
    </script>

}
