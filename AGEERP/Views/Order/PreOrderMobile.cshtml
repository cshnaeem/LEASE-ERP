@using AGEERP.Models
@{
    ViewBag.Title = "PreOrderMobile";
}
<div class="card">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">Purchase Order Plan (Mobile)</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Order</a></li>
                    <li class="breadcrumb-item active">Purchase Order Plan (Mobile)</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="card-body" id="frm">
        <div class="row">
            <div class="col-md-3 col-sm-3">
                @Html.Label("Supplier")
                @(Html.Kendo()
                .DropDownList()
                .Name("SuppId")
                .OptionLabel("Select Supplier")
                .DataValueField("SuppId")
                .DataTextField("SuppName")
                .Filter(FilterType.Contains)
                .Events(e => e.Change("LoadCompany"))
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("SupplierMobilesList", "Setup"));
                })
                .HtmlAttributes(new { @style = "width:100%;", @required = true })
                )
            </div>
            <div class="col-md-3 col-sm-3" style="margin-top:6px">
                @Html.Label("Company")
                @(Html.Kendo()
                .DropDownList()
                .Name("ComId")
                .OptionLabel("Select Company")
                .DataValueField("ComId")
                .DataTextField("ComName")

                .Filter(FilterType.Contains)
                .Events(e => e.Change("LoadProduct"))
                .DataSource(ds =>
                {
                    ds.Read(read => read.Action("CompBySupplierList", "Setup").Data("filterCompany"));
                })
                .HtmlAttributes(new { @style = "width:100%", @required = true })
                )

            </div>
            <div class="col-md-3 col-sm-3" style="margin-top:6px">
                @Html.Label("Product")
                @(Html.Kendo()
                .DropDownList()
                .Name("ProductId")
                .OptionLabel("Select Product")
                .DataValueField("ProductId")
                .DataTextField("Name")

                .Events(e => e.Change("LoadModel"))
                .Filter(FilterType.Contains)
                .DataSource(ds =>
                {
                    ds.Read(read => read.Action("ProductByCompList", "Setup").Data("filterProduct"));
                })
                .HtmlAttributes(new { @style = "width:100%", @required = true })
                )
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Location Type")
                @(Html.Kendo()
                .DropDownList()
                .Name("LocType")
                .SelectedIndex(0)
                //.DataValueField("ModelId")
                //.DataTextField("Model")
                //.MaxSelectedItems(10)
                //.ValuePrimitive(true)
                .BindTo(SelectListVM.LocationTypeSL)
                .HtmlAttributes(new { @style = "width:100%", @class = "browser-default", @required = true })
                )

            </div>
        </div>
        <div class="row">
            <div class="col-md-3 col-sm-3">
                @Html.Label("From Date")
                @Html.Kendo().DatePicker().Name("FromDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%", @required = true })
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("To Date")
                @Html.Kendo().DatePicker().Name("ToDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%", @required = true })
            </div>
            <div class="col-md-6 col-sm-6" style="margin-top:6px">
                @Html.Label("Model")
                @(Html.Kendo()
                .MultiSelect()
                .Name("ModelId")
                .DataValueField("ModelId")
                .DataTextField("Model")
                .MaxSelectedItems(10)
                .ValuePrimitive(true)
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("ModelByComProList", "Setup").Data("filterModel"))
                    .ServerFiltering(true);
                })
                .HtmlAttributes(new { @style = "width:100%", @class = "browser-default", @required = true })
                )
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 col-sm-6">
                @Html.Label("Remarks")
                @Html.Kendo().TextBox().Name("Remarks").HtmlAttributes(new { @style = "width:100%" })
            </div>
            <div class="col-md-3 col-sm-3">
                <br />
                <button class="k-button margin-10" type="button" onclick="loadGrid()">
                    <i class="fas fa-search"></i>&nbsp; Search
                </button>
                @*<button class="k-button margin-10" type="button" onclick="refreshGrid()">
                    <i class="fas fa-search"></i>&nbsp; Refresh
                </button>*@
            </div>
            <div class="col-md-3 col-sm-3">
                <label>Select File to Import</label>
                <div class="input-group mb-3">
                    <input type="file" class="form-control importfile" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" aria-label="Select File" aria-describedby="basic-addon1">
                    <div class="input-group-append">
                        <button class="btn btn-info btnLoadFile k-button" type="button">LOAD FILE</button>
                    </div>
                </div>
                <span style="color:red;">Please remove first row from excel file before upload</span>
            </div>
        </div>
        <div class="row" id="detail">
        </div>
    </div>
</div>


<script type="text/javascript" src="/scripts/xlsx.full.min.js"></script>
<script type="text/javascript" src="/scripts/jszip.js"></script>
<script>
    var validator = $("#frm").kendoValidator().data("kendoValidator");
        $(document).ready(function () {
            //$('#m_12000000').addClass('active');
            //$('#d_12000000').css("display", "block");
            //$('#m_12020000').addClass('active');
            //$('#a_12020000').addClass('active');
        });
    function LoadCompany() {
         $('#ComId').data('kendoDropDownList').dataSource.read();
    }
       function LoadProduct() {
        $('#ProductId').data('kendoDropDownList').dataSource.read();
    }
    function onSaveChanges(e) {
            if ($('#gridOrderPlanDetail').data('kendoGrid').dataSource.data().length == 0) {
                dia.content("Nothing to Save");
                dia.open();
                e.preventDefault();
            }
            else if (!validator.validate()) {
                e.preventDefault();
            }
            else if (!confirm("Are you sure that you want to proceed?")) {
                e.preventDefault();
            }
    }
    function loadGrid() {
        if (validator.validate()) {
            var model = $('#ModelId').val();
            //console.log(model);
            //$('#det').load("/Order/_PreOrderMobile?ModelLst=" + model);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("_PreOrderMobile","Order")',
                //dataType: 'application/json',
                //contentType: 'application/json',
                data: { ModelLst: model },
                cache: false,
                error: function (xhr) {
                    alert('Error: ' + xhr.statusText);

                },
                success: function (response) {
                    //console.log(response);
                    $('#detail').html(response);
                    resizeGrid();
                }
            }).done(function (result) {
                //console.log(result);
                $('#detail').html(result);
            }).fail(function (result) {
                //console.log(result);
                $('#detail').html(result.responseText);
            });
        }
    }
    function ModelData() {
        return {
            ModelLst: $('#ModelId').val(),
            FromDate: $('#FromDate').val(),
            ToDate: $('#ToDate').val(),
            LocType: $('#LocType').val()
        }
    }
    function filterModel() {
            return {
                ComId: $('#ComId').val(),
                ProductId: $('#ProductId').val()
            }
    }
    function filterProduct() {
        return {
            ComId: $('#ComId').val()
        }
    }
    function filterCompany() {
        return {
            SuppId: $('#SuppId').val()
        }
    }
    function MasterOrderPlan() {
            return {
                SuppId: $('#SuppId').val(),
                Remarks: $('#Remarks').val(),
                FromDate: $('#FromDate').val(),
                ToDate: $('#ToDate').val()
            }
        }
    function error_handler(e) {
            if (e.errors) {
                var message = "";
                $.each(e.errors,
                    function (key, value) {
                        if ('Msg' == key) {
                            $.each(value.errors,
                                function () {
                                    message += this;
                                });
                        } else {
                            $.each(value.errors,
                                function () {
                                    message += this;
                                });
                        }
                    });
                if (message.indexOf("Saved") > -1) {
                    var dia = $("#msgBox").data("kendoDialog");
                    dia.title("Success");
                    dia.content(message);
                    dia.open();
                    $("#gridOrderPlanDetail").data("kendoGrid").dataSource.data([]);
                } else {
                    var dia = $("#msgBox").data("kendoDialog");
                    dia.title("Error");
                    dia.content(message);
                    dia.open();
                }
            }
        }
    function LoadModel() {
        $('#ModelId').data('kendoMultiSelect').dataSource.read();
    }
    $(".btnLoadFile").click(function () {
        var fileUpload = $(".importfile")[0];
        var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx)$/;
        if (regex.test(fileUpload.value.toLowerCase())) {
            if (typeof (FileReader) != "undefined") {
                var reader = new FileReader();
                if (reader.readAsBinaryString) {
                    reader.onload = function (e) {
                        ProcessExcel(e.target.result);
                    };
                    reader.readAsBinaryString(fileUpload.files[0]);
                } else {
                    reader.onload = function (e) {
                        var data = "";
                        var bytes = new Uint8Array(e.target.result);
                        for (var i = 0; i < bytes.byteLength; i++) {
                            data += String.fromCharCode(bytes[i]);
                        }
                        ProcessExcel(data);
                    };
                    reader.readAsArrayBuffer(fileUpload.files[0]);
                }
            } else {
                $(".btnLoadFile").html("LOAD FILE");
                alert('This browser does not support HTML5.');
            }
        } else {
            $(".btnLoadFile").html("LOAD FILE");
            alert('Please upload a valid Excel file.');
        }
    });
    function ProcessExcel(data) {
        //kendo.ui.progress($('.card'), true);
        var workbook = XLSX.read(data, {
            type: 'binary'
        });
        var firstSheet = workbook.SheetNames[0];
        var excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);
        //console.log(excelRows);
        //var lst = $("#gridOrderPlanDetail").data('kendoGrid').dataSource.data();
        //console.log(lst);
        //for (var i = 0; i < excelRows.length; i++) {
        //    //var locId = typeof excelRows[i]["Loc Id"] === 'undefined' ? "" : excelRows[i]["Loc Id"];
        //    ////var SKU = typeof excelRows[i]["SKU"] === 'undefined' ? "" : excelRows[i]["SKU"];
        //    //if (locId === lst[i].LocId) {
        //        if (typeof excelRows[i]["OR"] != 'undefined') {
        //            lst[i].Order1 = excelRows[i]["OR"];
        //        }
        //        if (typeof excelRows[i]["OR_1"] != 'undefined') {
        //            lst[i].Order2 = excelRows[i]["OR_1"];
        //        }
        //        if (typeof excelRows[i]["OR_2"] != 'undefined') {
        //            lst[i].Order3 = excelRows[i]["OR_2"];
        //        }
        //        if (typeof excelRows[i]["OR_3"] != 'undefined') {
        //            lst[i].Order4 = excelRows[i]["OR_3"];
        //        }
        //        if (typeof excelRows[i]["OR_4"] != 'undefined') {
        //            lst[i].Order5 = excelRows[i]["OR_4"];
        //        }
        //        if (typeof excelRows[i]["OR_5"] != 'undefined') {
        //            lst[i].Order6 = excelRows[i]["OR_5"];
        //        }
        //        if (typeof excelRows[i]["OR_6"] != 'undefined') {
        //            lst[i].Order7 = excelRows[i]["OR_6"];
        //        }
        //        if (typeof excelRows[i]["OR_7"] != 'undefined') {
        //            lst[i].Order8 = excelRows[i]["OR_7"];
        //        }
        //        if (typeof excelRows[i]["OR_8"] != 'undefined') {
        //            lst[i].Order9 = excelRows[i]["OR_8"];
        //        }
        //        if (typeof excelRows[i]["OR_9"] != 'undefined') {
        //            lst[i].Order10 = excelRows[i]["OR_9"];
        //        }
        //    //}
        //}
        //$("#gridOrderPlanDetail").data('kendoGrid').dataSource.data(lst);

        var grid = $("#gridOrderPlanDetail").data('kendoGrid');
        var lst = grid.dataSource.data();
        //var rows = grid.items();
        //$(rows).each(function (e) {
            //var row = this;
            //var dataItem = grid.dataItem(row);
        for (var a = 0; a < lst.length; a++) {
            var row = grid.table.find("[data-uid=" + lst[a].uid + "]");
            var dataItem = grid.dataItem(row);
            //for (var i = 0; i < excelRows.length; i++) {
                if (typeof excelRows[a]["Loc Id"] != 'undefined') {
                    var locId = parseInt(typeof excelRows[a]["Loc Id"] === 'undefined' ? 0 : excelRows[a]["Loc Id"]);
                    ////var SKU = typeof excelRows[i]["SKU"] === 'undefined' ? "" : excelRows[i]["SKU"];
                    //console.log(locId);
                    if (locId == dataItem.LocId) {
                        console.log('a');
                        if (typeof excelRows[a]["OR"] != 'undefined') {
                            dataItem.set("Order1",excelRows[a]["OR"]);
                        }
                        if (typeof excelRows[a]["OR_1"] != 'undefined') {
                            dataItem.set("Order2",excelRows[a]["OR_1"]);
                        }
                        if (typeof excelRows[a]["OR_2"] != 'undefined') {
                            dataItem.set("Order3",excelRows[a]["OR_2"]);
                        }
                        if (typeof excelRows[a]["OR_3"] != 'undefined') {
                            dataItem.set("Order4",excelRows[a]["OR_3"]);
                        }
                        if (typeof excelRows[a]["OR_4"] != 'undefined') {
                            dataItem.set("Order5",excelRows[a]["OR_4"]);
                        }
                        if (typeof excelRows[a]["OR_5"] != 'undefined') {
                            dataItem.set("Order6",excelRows[a]["OR_5"]);
                        }
                        if (typeof excelRows[a]["OR_6"] != 'undefined') {
                            dataItem.set("Order7",excelRows[a]["OR_6"]);
                        }
                        if (typeof excelRows[a]["OR_7"] != 'undefined') {
                            dataItem.set("Order8",excelRows[a]["OR_7"]);
                        }
                        if (typeof excelRows[a]["OR_8"] != 'undefined') {
                            dataItem.set("Order9",excelRows[a]["OR_8"]);
                        }
                        if (typeof excelRows[a]["OR_9"] != 'undefined') {
                            dataItem.set("Order10",excelRows[a]["OR_9"]);
                        }
                        //break;
                    }
                }
            //}
            //dataItem.dirty = true;
            //dataItem.set("dirtyFields", { Order1: true });
            //});
            //grid.refresh();
        }
        //kendo.ui.progress($('.card'), false);
    }
    function refreshGrid() {
        var grid = $("#gridOrderPlanDetail").data('kendoGrid');
        grid.refresh();
    }
</script>
