@using AGEERP.Models
@{
    ViewBag.Title = "Order Plan";
    ViewBag.Parent = "Order";
}

<div class="card">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">Purchase Order (Mobile)</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/Home/Index">Home</a></li>
                    <li class="breadcrumb-item active">Purchase Order (Mobile)</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div id="frm" class="row">
            <div class="col-md-3 col-sm-3">
                @Html.Label("Supplier")
                @(Html.Kendo()
                .DropDownList()
                .Name("SuppId")
                .OptionLabel("Select Supplier")
                //.SelectedIndex(0)
                .DataValueField("SuppId")
                .DataTextField("SuppName")
                .Filter(FilterType.Contains)
                //.Suggest(true)
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("SupplierMobilesList", "Setup"));
                })
                .HtmlAttributes(new { @style = "width:100%;", @required = true })
                )
            </div>
            <div class="col-md-3 col-sm-3" style="margin-top:6px">
                @Html.Label("PO Plan")
                @(Html.Kendo().DropDownList()
                                        .Name("PlanId")
                                       .OptionLabel("Select Plan")
                                       .DataValueField("PlanId")
                                       .DataTextField("PlanId")
                                       .CascadeFrom("SuppId")
                                       .Events(e => e.Change("PlanChange"))
                                       .DataSource(ds =>
                                       {
                                           ds.Read(read => read.Action("GetPlanList", "Order").Data("filterPlan")).ServerFiltering(true);
                                       })
                                       .HtmlAttributes(new { @style = "width:100%" }))
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Payment Terms")
                @(Html.Kendo().DropDownList()
                                        .Name("PaymentTermId")
                                       .OptionLabel("Select Payment Term")
                                       .DataValueField("PaymentTermId")
                                       .DataTextField("Description")
                                       .Filter(FilterType.Contains)
                                       .DataSource(ds =>
                                       {
                                           ds.Read(read => read.Action("PaymentTermsList", "Setup"));
                                       })
                                       .HtmlAttributes(new { @style = "width:100%", @required = true }))
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Delivery Date")
                @Html.Kendo().DatePicker().Name("DeliveryDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%", @required = true })
            </div>
            <div class="col-md-6 col-sm-6">
                @Html.Label("Remarks")
                @Html.Kendo().TextBox().Name("Remarks").HtmlAttributes(new { @style = "width:100%" })
            </div>
        </div>
        <div id="frmD" class="row">
            <div class="col-md-3 col-sm-3">
                @Html.Label("Company")
                @(Html.Kendo()
                .DropDownList()
                .Name("ComId")
                .OptionLabel("Select Company ...")
                //.SelectedIndex(0)
                .DataValueField("ComId")
                .DataTextField("ComName")
                .CascadeFrom("SuppId")
                //.Suggest(true)
                .DataSource(ds =>
                {
                    ds.Read(read => read.Action("CompBySupplierList", "Setup").Data("filterCompany"))
                    .ServerFiltering();
                })
                .HtmlAttributes(new { @style = "width:100%", @required = true })
                )
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Product")
                @(Html.Kendo()
                .DropDownList()
                .Name("ProductId")
                .OptionLabel("Select Product ...")
                .SelectedIndex(0)
                .DataValueField("ProductId")
                .DataTextField("Name")
                //.Suggest(true)
                .CascadeFrom("ComId")
                //.Events(e => e.Change("LoadModel"))
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("ProductByCompList", "Setup").Data("filterProduct"))
                .ServerFiltering(true);
                })
                .HtmlAttributes(new { @style = "width:100%", @required = true })
                )
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Model")
                @(Html.Kendo()
                .DropDownList()
                .Name("ModelId")
                .OptionLabel("Select Model")
                .DataValueField("ModelId")
                .DataTextField("Model")
                .CascadeFrom("ProductId")
                //.Events(e => e.Change("LoadGrid"))
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("ModelByComProList", "Setup").Data("filterModel"))
                .ServerFiltering(true);
                })
                .HtmlAttributes(new { @style = "width:100%", @required = true })
                )
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("SKU")
                @(Html.Kendo()
                .DropDownList()
                .Name("SKUId")
                //.OptionLabel("Select SKU")
                .DataValueField("SKUId")
                .DataTextField("SKUName")
                .CascadeFrom("ModelId")
                .SelectedIndex(0)
                //.Events(e => e.Change("LoadGrid"))
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("SKUByModel4PurchaseList", "Setup").Data("filterSKU"))
                .ServerFiltering(true);
                })
                .HtmlAttributes(new { @style = "width:100%", @required = true })
                )
            </div>

            <div class="col-md-3 col-sm-3">
                @Html.Label("Location")
                @(Html.Kendo()
            .MultiColumnComboBox()
            .Name("LocId")
            //.OptionLabel("Select SKU")
            .DataValueField("LocId")
            .DataTextField("LocName")
            .Columns(columns =>
                        {
                            columns.Add().Field("LocCode").Width("200px");
                            columns.Add().Field("LocName").Width("200px");
                        })
            .SelectedIndex(0)
            .FilterFields(new string[] { "LocCode", "LocName" })
            .Filter(FilterType.Contains)

            //.Events(e => e.Change("LoadGrid"))
            .DataSource(ds =>
            {
            ds.Read(read => read.Action("LocationListPO", "Setup"));
            })
            .HtmlAttributes(new { @style = "width:100%", @required = true })
            )
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Qty")
                @(Html.Kendo().NumericTextBox().Name("Qty").HtmlAttributes(new { @style = "width:100%", @required = true }))
                @Html.ValidationMessage("Qty")
            </div>
            <div class="col-md-3 col-sm-3" style="margin-top:16px">
                <br />
                <button class="k-button mar" type="button" onclick="addtoOrder()">
                    <i class="fas fa-plus"></i>&nbsp; Add
                </button>
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Total")
                @Html.Kendo().TextBox().HtmlAttributes(new { @style = "width:100%;text-align:right", @readonly = true }).Name("TotalAmount").Value("0")
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
        @Html.Label("Purchase Order Detail")
        @(Html.Kendo()
        .Grid<PODetailVM>()
.Name("gridOrderPlanDetail")

.Columns(columns =>
{
    columns.Bound(c => c.PODtlId).Hidden();
    columns.Bound(c => c.SKUId).Hidden();
    columns.Bound(c => c.City).Title("Location").Width(150);
    columns.Bound(c => c.Model).Width(100);
    columns.Bound(c => c.SKU).Width(150);
    columns.Bound(c => c.Qty).Title("Order").Width(100).ClientFooterTemplate("Total: #=sum#");
    columns.Bound(c => c.TP).Width(100);
    columns.Bound(c => c.Discount).Title("Discount").Width(100);
    columns.Bound(c => c.MRP).Width(100);
    columns.Bound(c => c.GST).Title("GST 17%").Hidden();
    columns.Bound(c => c.WHT).Title("WHT 1%").Hidden();
    columns.Bound(c => c.NetPrice).Width(100);
    columns.Bound(c => c.Amount).Title("Total Amount").Width(150).ClientFooterTemplate("Total: #=sum#");
    columns.Command(c => { c.Destroy(); }).Width(100);
})
//.Pageable()
.Sortable()
.Scrollable()
.AutoBind(false)
.Navigatable()
.ToolBar(t =>
{
t.Template(@<text>
        <a class="k-button k-button-icontext k-grid-save-changes" href="javascript:void(0)"><span class="k-icon k-i-check"></span>Save changes</a><a class="k-button k-button-icontext k-grid-cancel-changes" href="javascript:void(0)"><span class="k-icon k-i-cancel"></span>Cancel changes</a>


        <div class="col-md-3 float-right">

                    <div class="input-group">

                        <input type="file" class="form-control importfile" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" aria-label="Select File" aria-describedby="basic-addon1">
                        <div class="input-group-append">
                            <button class="btn btn-info btnLoadFile k-button" type="button">LOAD EXCEL FILE</button>
                        </div>
                    </div>
        </div>
<div class="col-md-3 float-right">
<a style="color:dodgerblue" href="~/Content/MobileUploadTemplate.xlsx">Download Upload Temple</a>
</div>
        </text>);
    })
.Editable(e => e.Mode(GridEditMode.InCell))
.HtmlAttributes(new { style = "height:300px;font-size: .875rem!important;" })
.Events(e => e.DataBound("Calc").SaveChanges("onSaveChanges"))
.DataSource(dataSource => dataSource
.Ajax()
.Batch(true)
.Events(e => e.Error("error_handler"))
.ServerOperation(false)
        .Aggregates(aggregates =>
        {
            aggregates.Add(p => p.Qty).Sum();
            aggregates.Add(p => p.Amount).Sum();
        })
.Model(model =>
{
    model.Id(m => m.PODtlId);
    model.Field(m => m.CityId).Editable(false);
    model.Field(m => m.City).Editable(false);
    model.Field(m => m.SKUId).Editable(false);
    model.Field(m => m.ModelId).Editable(false);
    model.Field(m => m.Model).Editable(false);
    model.Field(m => m.SKU).Editable(false);
    model.Field(m => m.Qty).Editable(false);
    model.Field(c => c.TP).Editable(false);
    model.Field(c => c.MRP).Editable(false);
    model.Field(c => c.Discount).Editable(false);
    model.Field(c => c.GST).Editable(false);
    model.Field(c => c.WHT).Editable(false);
    model.Field(c => c.NetPrice).Editable(false);
    model.Field(c => c.Amount).Editable(false);
})
.Read(read => read.Action("PurchaseOrderMobile_Read", "Order").Data("filterOrderPlan"))
.Create(create => create.Action("PurchaseOrderMobile_Create", "Order").Data("MasterOrderPlan"))
.Update(update => update.Action("UserGroup_Update", "Security"))
))
        <form action="/Report/PrintSlip" method="post" target="_blank" id="rptForm" hidden="hidden">
            @Html.AntiForgeryToken()
            @Html.Hidden("rpt")
            @Html.Hidden("POId")
        </form>
        @section scripts
{
            <script type="text/javascript" src="~/scripts/xlsx.full.min.js"></script>
            <script type="text/javascript" src="~/scripts/jszip.js"></script>
            <script>
                $(".btnLoadFile").click(function () {
                    var fileUpload = $(".importfile")[0];
                    var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx)$/;
                    if (regex.test(fileUpload.value.toLowerCase())) {
                        if (typeof (FileReader) != "undefined") {
                            var reader = new FileReader();
                            if (reader.readAsBinaryString) {
                                reader.onload = function (e) {
                                    ProcessExcel(e.target.result);
                                };
                                reader.readAsBinaryString(fileUpload.files[0]);
                            } else {
                                //For IE Browser.
                                reader.onload = function (e) {
                                    var data = "";
                                    var bytes = new Uint8Array(e.target.result);
                                    for (var i = 0; i < bytes.byteLength; i++) {
                                        data += String.fromCharCode(bytes[i]);
                                    }
                                    ProcessExcel(data);
                                };
                                reader.readAsArrayBuffer(fileUpload.files[0]);
                            }
                        } else {
                            $(".btnLoadFile").html("LOAD EXCEL FILE");
                            alert('This browser does not support HTML5.');
                        }
                    } else {
                        $(".btnLoadFile").html("LOAD EXCEL FILE");
                        alert('Please upload a valid Excel file.');
                    }
                });
                function ProcessExcel(data) {
                    var workbook = XLSX.read(data, {
                        type: 'binary'
                    });
                    var firstSheet = workbook.SheetNames[0];
                    var excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);
                    for (var i = 0; i < excelRows.length; i++) {
                        var City = parseInt(typeof excelRows[i]["LocId"] === 'undefined' ? "0" : excelRows[i]["LocId"]);
                        var SKUId = parseInt(typeof excelRows[i]["SKUId"] === 'undefined' ? "0" : excelRows[i]["SKUId"]);
                        var Qty = parseInt(typeof excelRows[i]["Qty"] === 'undefined' ? "0" : excelRows[i]["Qty"]);
                        if (City == 0) {
                            break;
                        }
                        addOrder(SKUId, Qty, City);
                    }
                }



                var validator = $("#frm").kendoValidator().data("kendoValidator");
                var validatorD = $("#frmD").kendoValidator().data("kendoValidator");
                $(document).ready(function () {
                    $('.modal').modal();
                    //$('#m_12000000').addClass('active');
                    //$('#d_12000000').css("display", "block");
                    //$('#m_12040000').addClass('active');
                    //$('#a_12040000').addClass('active');
                    //resizeGrid();
                });
                function addOrder(sku, qty, locId) {
                    var suppId = $('#SuppId').data('kendoDropDownList').value();
                    //var dat = $("#gridOrderPlanDetail").data("kendoGrid").dataSource.data();
                    //var oldData = null;
                    //for (var i = 0; i < dat.length; i++) {
                    //    if (dat[i].SKUId == sku && dat[i].CityId == locId) {
                    //        qty = qty + dat[i].Qty;
                    //        oldData = dat[i];
                    //        break;
                    //    }
                    //}
                    //$.ajax({
                    //    url: "/Order/AddToOrderMobile",
                    //    type: 'GET',
                    //    async: false,
                    //    data: JSON.stringify({
                    //        "SKUId": sku, "SuppId": suppId, "Qty": qty, "LocId": locId
                    //    }),
                    //    contentType: 'application/json; charset=utf-8',
                    //    success: function (result) {
                    //        if (result.SKUId > 0) {
                    //            if (result.MRP > 0) {
                    //                var ord = $("#gridOrderPlanDetail").data("kendoGrid").dataSource;
                    //                if (oldData != null) {
                    //                    ord.remove(oldData);
                    //                }
                    //                ord.add(result);
                    //            }
                    //        }
                    //    }
                    //});
                    $.getJSON("/Order/AddToOrderMobile?SKUId=" + sku + "&SuppId=" + suppId + "&Qty=" + qty + "&LocId=" + locId, function (result) {
                        //debugger;
                        if (result.SKUId > 0) {
                            if (result.MRP > 0) {
                                var ord = $("#gridOrderPlanDetail").data("kendoGrid").dataSource;
                                //if (oldData != null) {
                                //    ord.remove(oldData);
                                //}
                                ord.add(result);
                                //$('#ComId').data('kendoDropDownList').focus();
                            }
                            //else {
                            //    kendo.alert("Please enter the Purchase Prices first");
                            //}
                        }
                    });
                }
                function addtoOrder() {
                    if (validatorD.validate()) {
                        var sku = $('#SKUId').data('kendoDropDownList').value();
                        var suppId = $('#SuppId').data('kendoDropDownList').value();
                        var qty = $('#Qty').data('kendoNumericTextBox').value();
                        var locId = $('#LocId').data('kendoMultiColumnComboBox').value();
                        var dat = $("#gridOrderPlanDetail").data("kendoGrid").dataSource.data();
                        var oldData = null;
                        for (var i = 0; i < dat.length; i++) {
                            if (dat[i].SKUId == sku && dat[i].CityId == locId) {
                                qty = qty + dat[i].Qty;
                                oldData = dat[i];
                                break;
                            }
                        }
                        $.getJSON("/Order/AddToOrderMobile?SKUId=" + sku + "&SuppId=" + suppId + "&Qty=" + qty + "&LocId=" + locId, function (result) {
                            if (result.SKUId > 0) {
                                if (result.MRP > 0) {
                                    var ord = $("#gridOrderPlanDetail").data("kendoGrid").dataSource;
                                    if (oldData != null) {
                                        ord.remove(oldData);
                                    }
                                    ord.add(result);
                                    $('#ComId').data('kendoDropDownList').focus();
                                }
                                else {
                                    kendo.alert("Please enter the Purchase Prices first");
                                }
                            }
                        });
                    }
                }
                function onSaveChanges(e) {
                    if (!validator.validate()) {
                        e.preventDefault();
                        return;
                    }
                    var dat = $("#gridOrderPlanDetail").data("kendoGrid").dataSource.data();
                    if (dat.length == 0) {
                        dia.content("Nothing to Save");
                        dia.open();
                        e.preventDefault();
                        return;
                    }
                    for (var i = 0; i < dat.length; i++) {
                        if (dat[i].MRP == 0) {
                            kendo.alert(dat[i].SKU + " purchase price not found");
                            e.preventDefault();
                            return;
                        }
                    }
                    if (!confirm("Are you sure that you want to proceed?")) {
                        e.preventDefault();
                        return;
                    }
                }
                //function ApplyPolicy() {
                //    if ($('#PolicyType').val() == "D") {
                //        $("#gridPOGift").data("kendoGrid").dataSource.data([]);
                //        var dat = [];
                //        var ord = $("#gridOrderPlanDetail").data("kendoGrid").dataSource.data();
                //        for (var i = 0; i < ord.length; i++) {
                //            dat.push({ SKUId: ord[i].SKUId, Qty: ord[i].Qty, ModelId: ord[i].ModelId });
                //        }
                //        $.ajax({
                //            type: "POST",
                //            data: { dat: dat },
                //            url: "/Order/ApplyDiscountPolicy",
                //            success: function (msg) {
                //                //console.log(msg);
                //                $('#Disc').val(msg);
                //                Calc();
                //            }
                //        });
                //    }
                //    else {
                //        $('#Disc').val(0);
                //        $("#gridPOGift").data("kendoGrid").dataSource.read();
                //    }
                //}
                function Calc() {
                    var tot = 0;
                    //var extra = 0;
                    //var disc = $('#Disc').val();
                    //console.log(disc);
                    var ord = $("#gridOrderPlanDetail").data("kendoGrid").dataSource.data();
                    for (var i = 0; i < ord.length; i++) {
                        tot = tot + ord[i].Amount;
                    }
                    //var ord = $("#gridPOGift").data("kendoGrid").dataSource.data();
                    //for (var i = 0; i < ord.length; i++) {
                    //    extra = extra + ord[i].Amount;
                    //}
                    $('#TotalAmount').val(tot);
                    //$('#ExtraCharges').val(extra);

                    //$('#NetAmount').val((tot - disc) + extra);
                }
                //function POPolicyData() {
                //    var dat = [];
                //    var ord = $("#gridOrderPlanDetail").data("kendoGrid").dataSource.data();
                //    for (var i = 0; i < ord.length; i++) {
                //        dat.push({ SKUId: ord[i].SKUId, Qty: ord[i].Qty });
                //    }
                //    //console.log(dat);
                //    return {
                //        dat: dat
                //    }
                //}
                function filterType() {
                    return {
                        ComId: $('#ComId').val() || 0
                    }
                }
                function filterSKU() {
                    return {
                        ModelId: $('#ModelId').val()
                    }
                }
                function filterProduct() {
                    return {
                        ComId: $('#ComId').val() || 0
                    }
                }
                function filterModel() {
                    return {
                        ComId: $('#ComId').val(),
                        ProductId: $('#ProductId').val()
                    }
                }
                function filterOrderPlan() {
                    return {
                        PlanId: $('#PlanId').val() || 0
                    }
                }
                function filterCompany() {
                    return {
                        SuppId: $('#SuppId').val()
                    }
                }
                //function filterCity() {
                //    return {
                //        CityId: $('#CityId').val() || 0
                //    }
                //}
                function filterPlan() {
                    return {
                        SuppId: $('#SuppId').val() || 0
                    }
                }
                function MasterOrderPlan() {
                    var data = {
                        //CityId: $('#CityId').val(),
                        SuppId: $('#SuppId').val() || 0,
                        DueDate: $('#DeliveryDate').val(),
                        Remarks: $('#Remarks').val(),
                        PaymentTerm: $('#PaymentTermId').val(),
                        PlanId: $('#PlanId').val() || 0,
                        //PolicyType: $('#PolicyType').val()
                    }
                    console.log(data);
                    return data;
                }
                function PlanChange() {
                    $("#gridOrderPlanDetail").data("kendoGrid").dataSource.read();
                }
                function IsValid() {
                    var typeId = $('#TypeId').val() || 0;
                    var locId = $('#LocId').val();

                    var dia = $("#msgBox").data("kendoDialog");
                    dia.title("Validation");
                    if (locId.length > 0) {
                        if (typeId > 0) {
                            return true;
                        }
                        else {
                            dia.content("Please Select Type");
                        }
                    }
                    else {
                        dia.content("Please Select Location");
                    }
                    dia.open();
                    return false;
                }
                //function OnPriceChange(e) {
                //    if (e.action === "itemchange") {
                //        if (e.field === "InvoicePrice" || e.field === "Discount" || e.field === "Qty") {
                //            var model = e.items[0];
                //            model.set("GST", model.InvoicePrice * 0.17);
                //            model.set("WHT", model.InvoicePrice * 0.01);
                //            //model.set("MRP", Math.round((model.InvoicePrice * (model.Discount / 100)) + ( model.InvoicePrice)));
                //            model.set("NetPrice", model.GST + model.WHT + model.InvoicePrice - model.Discount);
                //            model.set("Amount", model.NetPrice * model.Qty);

                //        }
                //    }
                //}
                //function OnProductChange(e) {
                //    var cur = this.columns[this.cellIndex(e.container)].field;
                //    if (cur === "Amount" || cur === "GST" || cur === "WHT" || cur === "NetPrice") {
                //        var grid = $("#gridOrderPlanDetail").data("kendoGrid");
                //        var curCell = $("#gridOrderPlanDetail").find(".k-edit-cell");
                //        var cellToEdit = curCell.parent().next().find('td:eq(8)');
                //        console.log(cellToEdit);
                //        console.log(cellToEdit.length);
                //        if (cellToEdit.length > 0) {
                //            grid.editCell(cellToEdit);
                //        }
                //        else {
                //            console.log('f');
                //            e.preventDefault();
                //            $('.k-grid-save-changes').focus();
                //        }
                //    }
                //}
                function error_handler(e) {
                    if (e.errors) {
                        var message = "";
                        $.each(e.errors,
                            function (key, value) {
                                if ('Msg' == key) {
                                    $.each(value.errors,
                                        function () {
                                            message += this;
                                        });
                                } else {
                                    $.each(value.errors,
                                        function () {
                                            message += this;
                                        });
                                }
                            });
                        if (message > 0) {
                            //var dia = $("#msgBox").data("kendoDialog");
                            //dia.title("Success");
                            //dia.content(message);
                            //dia.open();
                            //$("#gridOrderPlan").data("kendoGrid").dataSource.data([]);
                            $.confirm({
                                title: 'Saved Successfully!',
                                content: 'Do you want to print?',
                                type: 'red',
                                typeAnimated: true,
                                icon: 'fas fa-check',
                                buttons: {
                                    Print: function () {
                                        $("#rpt").val("PO");
                                        $("#POId").val(message);
                                        $("#rptForm").submit();
                                    },
                                    Cancel: function () {
                                    }
                                }
                            });
                            $("#gridOrderPlanDetail").data("kendoGrid").dataSource.data([]);
                        } else {
                            var dia = $("#msgBox").data("kendoDialog");
                            dia.title("Error");
                            dia.content(message);
                            dia.open();
                        }
                    }
                }

                                            //var gridElement = $("#gridOrderPlanDetail");
                                                                                            //function resizeGrid() {
                                                                                            //    var height = $(window).innerHeight() - $('header').innerHeight() - 180;
                                                                                            //    if (height < 200) {
                                                                                            //        height = 200;
                                                                                            //    }
                                                                                            //    else if (height > 910) {
                                                                                            //        height = 910;
                                                                                            //    }
                                                                                            //    $("#gridOrderPlanDetail").css("height", height);
                                                                                            //    gridElement.data("kendoGrid").resize();
                                                                                            //}


                                                                                            //$(window).resize(function () {
                                                                                            //    resizeGrid();
                                                                                            //});
            </script>
            <style>
                #dropLoc {
                }
            </style>
        }
