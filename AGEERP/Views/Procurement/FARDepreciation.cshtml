@using AGEERP.Models
@{
    ViewBag.Title = "FAR";
}
<div class="card">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">FAR</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/Procurement">Procurement</a></li>
                    <li class="breadcrumb-item active">FAR</li>
                </ol>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-9">
        </div>
        <div class="col-md-3">
            <br />
            <button class="k-button" type="button" onclick="showGrid()">
                <i class="fas fa-plus"></i>&nbsp; Show
            </button>
            <button class="k-button" type="button" onclick="postGrid()">
                <i class="fas fa-plus"></i>&nbsp; Post
            </button>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            @(Html.Kendo()
        .Grid<FarDepreciationVM>
    ()
    .Name("gridFarDepr")
    .Columns(columns =>
    {
    columns.Bound(c => c.CCCodeDesc);
    columns.Bound(c => c.ItemName);
    columns.Bound(c => c.SerialNo);
    columns.Bound(c => c.CostType);
    columns.Bound(c => c.PPrice);
    columns.Bound(c => c.CurrentValue);
    columns.Bound(c => c.DeprAmt).ClientFooterTemplate("#=sum#");
    })
    .Sortable()
    .ToolBar(t =>
    {
    t.Excel();
    //t.Save();
    })
    //.Pageable()
    //.Filterable()
    .Scrollable()

    .AutoBind(false)
    //.Navigatable()
    //.ToolBar(t => t.Save())
    //.Editable(e => e.Mode(GridEditMode.PopUp).TemplateName("_EditStockOpening"))
    //.Events(e => e.SaveChanges("onSaveChanges"))
    .HtmlAttributes(new { style = "height:500px;font-size:12px;" })

    .DataSource(dataSource => dataSource
    .Ajax()
    //.Batch(true)
    //.ServerOperation(false)
    //.AutoSync(true)
    //.Events(e => e.Error("error_handler"))
    //.PageSize(100)
    .Aggregates(aggregates =>
    {
    aggregates.Add(p => p.DeprAmt).Sum();
            })
    .Model(model =>
    {
    model.Id(m => m.StoreId);
    })
    .Read(read => read.Action("FARDepr_Read", "Procurement"))
    //.Update(create => create.Action("StockOpening_Update", "Procurement"))
    ))
</div>
    </div>
</div>
        <script>
            function showGrid(){
                $("#gridFarDepr").data("kendoGrid").dataSource.read();
            }
            function postGrid() {
                if (confirm("Are you sure?")) {
                    $.ajax({
                        url: '/Procurement/PostDepreciation',
                        type: 'GET',
                        //data: JSON.stringify(dat),
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            if (data == true) {
                                var dia = $("#msgBox").data("kendoDialog");
                                dia.title("Success");
                                dia.content("Save Successfully");
                                dia.open();
                            }
                            else {
                                var dia = $("#msgBox").data("kendoDialog");
                                dia.title("Error");
                                dia.content("Not Save Successfully");
                                dia.open();
                            }
                        },
                        error: function () {
                            var dia = $("#msgBox").data("kendoDialog");
                            dia.title("Error");
                            dia.content("Not Save Successfully");
                            dia.open();
                        }
                    });
                }
                else {
                    var dia = $("#msgBox").data("kendoDialog");
                    dia.title("Validation");
                    dia.content("Please select Locations");
                    dia.open();
                }
            }
            //function EditEmployee(e) {
            //    e.preventDefault();
            //    var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            //    var win = window.open("/Procurement/AssetAllocation/" + dataItem.StoreId, '_blank');
            //    win.focus();
            //}
        </script>
