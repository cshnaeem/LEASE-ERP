@using AGEERP.Models
@{
    ViewBag.Title = "Stock Service Invoice";
}

<div class="card">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">Stock Service Invoice</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/Procurement">Procurement</a></li>
                    <li class="breadcrumb-item active">Stock Service Invoice</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="col-lg-12 col-md-12 col-xs-12">
        <div class="row">
            <div class="col-md-3 col-sm-3">
                @Html.Label("Location")
                @(Html.Kendo()
                .MultiColumnComboBox()
                    .Name("LocId")
                    .Placeholder("Select Locations ...")
                    .DataValueField("LocId")
                    .DataTextField("LocName")
                    .Value("72")
                    .Columns(columns =>
                    {
                        columns.Add().Field("LocCode").Width("100px");
                        columns.Add().Field("LocName").Width("200px");
                    })
                    .FilterFields(new string[] { "LocCode", "LocName" })
                    .Filter(FilterType.Contains)
                    .Events(e => e.Change("loadPO").DataBound("loadPO"))
                .DataSource(ds =>
                {
                    ds.Read(read => read.Action("LocationList", "Setup"));
                })
                .HtmlAttributes(new { @style = "width:100%", @readonly = true })
                )
            </div>
            @*<div class="col-md-3 col-sm-3">
            @Html.Label("Supplier")
            @(Html.Kendo().DropDownList()
            .Name("SuppId")
            .OptionLabel("Select Supplier")
            .DataValueField("Id")
            .DataTextField("Name")
            .DataSource(ds =>
            {
            ds.Read(read => read.Action("SubsidaryCodeList", "Account").Data("filterSubsidiary"));
            })
            .HtmlAttributes(new { @style = "width:100%", @required = true }))
        </div>*@
            <div class="col-md-3 col-sm-3">
                @Html.Label("PO")
                @(Html.Kendo().DropDownList()
            .Name("POId")
            .OptionLabel("Select PO")
            .DataValueField("POId")
            .DataTextField("PONo")
            .Events(e => e.Change("loadPODetail"))
            .DataSource(ds =>
            {
            ds.Read(read => read.Action("POList", "Procurement").Data("filterLoc"));
            })
            .HtmlAttributes(new { @style = "width:100%", @required = true }))
            </div>

            <div class="col-md-3">
                @Html.Label("RefInvNo")
                @(Html.Kendo()
                .TextBox()
                .Name("RefInvNo")
                .HtmlAttributes(new { @style = "width:100%" }))
            </div>
            <div class="col-md-3">
                @Html.Label("ReceivedBy")
                @(Html.Kendo()
                .TextBox()
                .Name("RecvBy")
                .HtmlAttributes(new { @style = "width:100%" }))
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Documents")
                @(Html.Kendo().Upload()
                  .Name("files")
                  .Multiple(true)
                  .ShowFileList(false)
                  .Async(a => a
                      .Save("UploadDocBulk", "Document", new { refobjid = 22 })
                      .Remove("DocumentRemove", "Document")
                      .SaveField("files")
                      .AutoUpload(false)
                      .Concurrent(true)
                      .Batch(true)
                  ).Events(e => e
                  .Success("onDocUp")
                  .Remove("onUploadRemove")
                  //.Remove("OnRemove")
                  )
                    )
            </div>
        </div>
        <hr />
        @*<div class="row">*@
        @*<div class="col-md-3 col-sm-3">
                @Html.Label("Location")
                @(Html.Kendo()
                .MultiColumnComboBox()
                    .Name("LocId")
                    .Placeholder("Select Locations ...")
                    .DataValueField("LocId")
                    .DataTextField("LocName")
                    .SelectedIndex(0)
                    .Columns(columns =>
                    {
                        columns.Add().Field("LocCode").Width("100px");
                        columns.Add().Field("LocName").Width("200px");
                    })
                    .FilterFields(new string[] { "LocCode", "LocName" })
                    .Filter(FilterType.Contains)
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("LocationList", "Setup"));
                })
                .HtmlAttributes(new { @style = "width:100%" })
                )
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Item")
                @(Html.Kendo().MultiColumnComboBox()
                    .Name("ItemId")
                    .AutoBind(false)
                    .Placeholder("Select Item...")
                    .DataTextField("Item")
                    .DataValueField("ItemId")
                    .Columns(columns =>
                    {
                        columns.Add().Field("Item").Width("300px");
                        columns.Add().Field("ItemBrand").Width("200px");
                        columns.Add().Field("ItemProduct").Width("200px");
                    })
                    .Suggest(true)
                    .Filter(FilterType.Contains)
                    .FilterFields(new string[] { "Item", "ItemBrand", "ItemProduct" })
                    //.MinLength(3)
                    .Events(e => e.Change("SKUChange"))
                    .DataSource(dataSource =>
                    {
                        dataSource.Read(read => read.Action("ItemSearchList", "Procurement").Data("filterItem")).ServerFiltering(true);
                    })
                    .IgnoreCase(true)
                    .HtmlAttributes(new { @style = "width:100%", @required = true })
                    )
                @Html.ValidationMessage("ItemId")
            </div>*@
        @*<div class="col-md-3 col-sm-3">
                @Html.Label("Brand")
                @(Html.Kendo()
                    .TextBox()
                    .Name("Brand")
                    .Enable(false)
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Product")
                @(Html.Kendo()
                    .TextBox()
                    .Name("Product")
                    .Enable(false)
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
            </div>
            <div class="col-md-3">
                @Html.Label("Qty")
                @(Html.Kendo()
               .NumericTextBox()
               .Name("Qty")
               .Min(0)
               .Value(0)
               .HtmlAttributes(new { @style = "width:100%" }))
            </div>
            <div class="col-md-3">
                @Html.Label("Rate")
                @(Html.Kendo()
               .NumericTextBox()
               .Name("Rate")
               .Min(0)
               .Value(0)
               .HtmlAttributes(new { @style = "width:100%" }))
            </div>
            <div class="col-md-3">
                @Html.Label("Discount")
                @(Html.Kendo()
               .NumericTextBox()
               .Name("Discount")
               .Min(0)
               .Value(0)
               .HtmlAttributes(new { @style = "width:100%" }))
            </div>*@

        @*<div class="col-md-3">
                <br />
                <button class="k-button margin-10" type="button" onclick="addToGrid()">
                    <i class="fas fa-plus"></i>&nbsp; Add
                </button>
            </div>*@
        @*</div>*@
    </div>
    <div class="row">
        @(Html.Kendo()
        .Grid<ProGRNDetailVM>()
    .Name("gridGRNDetail")
    .Columns(columns =>
    {
        columns.Bound(c => c.Item);
        columns.Bound(c => c.OrderQty);
        columns.Bound(c => c.Qty).Title("Recv Qty");
        //columns.Bound(c => c.Rate);
        //columns.Bound(c => c.Disc);
        //columns.Command(c => { c.Destroy(); }).Width(100);
    })
    .Sortable()
    .Pageable()
    .Scrollable()
    .AutoBind(false)
    .Navigatable()
    .ToolBar(t => t.Save())
    .Editable(e => e.Mode(GridEditMode.InCell))
    .Events(e => e.SaveChanges("onSaveChanges"))
    .HtmlAttributes(new { style = "height:300px;" })

    .DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .Events(e => e.Error("error_handler").Change("OnSrNoChange"))
    .PageSize(100)
    .Model(model =>
    {
        model.Id(m => m.GRNDtlId);
        model.Field(m => m.ItemId).Editable(false);
        model.Field(m => m.Item).Editable(false);
        model.Field(m => m.OrderQty).Editable(false);
        //model.Field(m => m.Rate).Editable(false);
        //model.Field(m => m.Disc).Editable(false);
        //model.Field(m => m.Tax).Editable(false);
    })
    .Read(read => read.Action("GRN_Read", "Procurement").Data("filterPO"))
    .Create(create => create.Action("GRN_Create", "Procurement").Data("masterData"))
    .Update(create => create.Action("GRN_Create", "Procurement").Data("masterData"))
    ))
    </div>
</div>
@Html.Partial("~/Views/Report/_Report.cshtml")
<script>
    $(document).ready(function () {
        //$('#m_18000000').addClass('active');
        //$('#d_18000000').css("display", "block");
        //$('#m_18060000').addClass('active');
        //$('#a_18060000').addClass('active');
        resizeGrid();

    });

    function onDocUp(e) {
        for (i = 0; i < e.response.length; i++) {
            e.files[i].id = e.response[i];
        }
    }
    function onUploadRemove(e) {
        var files = e.files;
        var docid = 0;
        for (i = 0; i < files.length; i++) {
            //replace the name with the id added to the object
            docid = files[i].id;
        }

        return {
            DocId: docid
        }
    }

    function OnSrNoChange(e) {
        if (e.action === "itemchange" && e.field === "Qty") {
            var model = e.items[0];
            if (model.Qty > model.OrderQty) {
                alert('Qty Cannot be greater than Order Qty');
                model.set("Qty", model.OrderQty);
            }
        }
    }
    function loadPODetail() {
        $('#gridGRNDetail').data('kendoGrid').dataSource.read();
    }
    function loadPO() {
        $('#POId').data('kendoDropDownList').dataSource.read();
    }
    function filterLoc() {
        return {
            LocId: $('#LocId').val()
        }
    }
    function filterPO() {
        return {
            POId: $('#POId').val(),
            LocId: $('#LocId').val()
        }
    }
    function filterSubsidiary() {
        return {
            PId: 458,
            str: ""
        }
    }

    function SKUChange() {
        var data = $('#ItemId').data('kendoMultiColumnComboBox').dataItem();
        if (data != null) {
            $('#Brand').val(data.ItemBrand);
            $('#Product').val(data.ItemProduct);
        }
    }

    function filterItem() {
        return {
            filterModel: $("#ItemId").data("kendoMultiColumnComboBox").input.val() || ""
        }
    }

    var gridElement = $("#gridGRNDetail");

    function masterData() {
        var upload = $("#files").data("kendoUpload"), files = upload.getFiles();
        var fl = [];
        for (var i = 0; i < files.length; i++) {
            fl.push(files[i].id);
        }
        return {
            RefInvNo: $('#RefInvNo').val(),
            RecvBy: $('#RecvBy').val(),
            POId: $('#POId').val(),
            LocId: $('#LocId').val(),
            files: fl
        }
    }

    function onSaveChanges(e) {

        var dat = $("#gridGRNDetail").data("kendoGrid").dataSource.data();
        if (dat.length == 0) {
            dia.content("Nothing to Save");
            dia.open();
            e.preventDefault();
            return;
        }

        if (!confirm("Are you sure that you want to proceed?")) {
            e.preventDefault();
            return;
        }
    }

    //function addToGrid() {
    //    var dataSource = $('#gridGRNDetail').data('kendoGrid').dataSource;
    //    var itm = $('#ItemId').data('kendoMultiColumnComboBox').dataItem();
    //    var dat = {
    //        MTRDtlId: 0,
    //        Item: itm.Item,
    //        ItemId: itm.ItemId,
    //        ItemBrand: itm.ItemBrand,
    //        ItemProduct: itm.ItemProduct,
    //        Qty: $('#Qty').val(),
    //        LocId: $('#LocId').val()
    //    };
    //    if (dat.ItemId > 0 && dat.ItemId && dat.Qty > 0) {
    //        var data = dataSource.data();
    //        //for (var i = 0; i < data.length; i++) {
    //        //    if (data[i].SerialNo == dat.SerialNo) {
    //        //        alert('Serial No already exist');
    //        //        return;
    //        //    }
    //        //if (data[i].CSerialNo == dat.CSerialNo) {
    //        //    alert('Brand Serial No already exist');
    //        //    return;
    //        //}
    //        //}
    //        dat.dirty = true;
    //        dataSource.add(dat);
    //        //dataSource.sync();
    //        resetFields();
    //    }
    //    else {
    //        alert('Please Select SKU and Serial No');
    //    }
    //}

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors,
                function (key, value) {
                    if ('Msg' == key) {
                        $.each(value.errors,
                            function () {
                                message += this;
                            });
                    } else {
                        $.each(value.errors,
                            function () {
                                message += this;
                            });
                    }
                });
            if (message > 0) {
                $.confirm({
                    title: 'Saved Successfully!',
                    content: 'Do you want to print?',
                    type: 'red',
                    typeAnimated: true,
                    icon: 'fas fa-check',
                    buttons: {
                        Print: function () {
                            $("#rpt").val("ProGRN");
                            $("#TransId").val(message);
                            $("#rptForm").submit();
                        },
                        Cancel: function () {
                        }
                    }
                });
                $('#gridGRNDetail').data('kendoGrid').dataSource.data([]);
            } else {
                var dia = $("#msgBox").data("kendoDialog");
                dia.title("Error");
                dia.content(message);
                dia.open();
            }
        }
    }

    //function resetFields() {
    //    //$('#LocId').data('kendoMultiColumnComboBox').value(0);
    //    //$('#SuppId').data('kendoDropDownList').value(0);
    //    //$('#ComId').data('kendoDropDownList').value(0);
    //    //$('#TypeId').data('kendoDropDownList').value(0);
    //    $('#ModelId').data('kendoDropDownList').value(0);
    //    $('#ItemId').data('kendoDropDownList').value(0);
    //    $('#Qty').val(0);
    //    $('#Remarks').val("");

    //}

    function resizeGrid() {
        var height = $(window).innerHeight() - $('header').innerHeight() - 180;
        if (height < 200) {
            height = 200;
        }
        else if (height > 910) {
            height = 910;
        }
        $("#gridGRNDetail").css("height", height);
        gridElement.data("kendoGrid").resize();
    }


    $(window).resize(function () {
        resizeGrid();
    });

</script>

