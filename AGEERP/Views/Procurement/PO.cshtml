@using AGEERP.Models
@{
    ViewBag.Title = "Purchase Order";
}

<div class="card">
    <div class="content-header">
        <div class="card-header">
            <h3 class="card-title">Purchase Order</h3>
            <div class="card-tools">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Procurement</a></li>
                    <li class="breadcrumb-item active">Purchase Order</li>
                </ol>
            </div>
        </div>
    </div>
    <div class="col-lg-12 col-md-12 col-xs-12">
        <div class="row">
            <div class="col-md-3 col-sm-3">
                @Html.Label("Supplier")
                @(Html.Kendo().DropDownList()
                .Name("SuppId")
                .OptionLabel("Select Supplier")
                .DataValueField("SuppId")
                .DataTextField("SuppName")
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("SupplierList", "Procurement"));
                })
                .HtmlAttributes(new { @style = "width:100%", @required = true }))
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("MTR")
                @(Html.Kendo().MultiColumnComboBox()
                .Name("MTRId")
                .Placeholder("Select MTR")
                .DataValueField("MTRId")
                .DataTextField("MTRNo")
                //.Events(e => e.Change("mtrChange"))
                .DataSource(ds =>
                {
                    ds.Read(read => read.Action("MTRList", "Procurement"));
                })
                .HtmlAttributes(new { @style = "width:100%"}))
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Nature")
                @(Html.Kendo().DropDownList()
                .Name("NatureId")
                .OptionLabel("Select Nature")
                .DataValueField("ItemNatureId")
                .DataTextField("ItemNature")
                .Events(e => e.Change("natureChange"))
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("NatureList", "Procurement"));
                })
                .HtmlAttributes(new { @style = "width:100%", @required = true }))
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("PaymentTerms")
                @(Html.Kendo().DropDownList()
                .Name("PaymentTermId")
                .OptionLabel("Select Payment Term")
                .DataValueField("PaymentTermId")
                .DataTextField("Description")
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("PaymentTermsList", "Setup"));
                })
                .HtmlAttributes(new { @style = "width:100%", @required = true }))
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Required Date")
                @Html.Kendo().DatePicker().Name("RequiredDate").Value(DateTime.Now.Date).HtmlAttributes(new { @style = "width:100%" })
            </div>
            <div class="col-md-6">
                @Html.Label("DeliveryAddress")
                @(Html.Kendo()
                .TextBox()
                .Name("DeliveryAddress")
                .HtmlAttributes(new { @style = "width:100%" }))
            </div>
            <div class="col-md-6">
                @Html.Label("Remarks")
                @(Html.Kendo()
                .TextBox()
                .Name("Remarks")
                .HtmlAttributes(new { @style = "width:100%" }))
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-3 col-sm-3">
                @Html.Label("Location")
                @(Html.Kendo()
                .MultiColumnComboBox()
                    .Name("LocId")
                    .Placeholder("Select Locations ...")
                    .DataValueField("LocId")
                    .DataTextField("LocName")
                    .Value("72")
                    .Columns(columns =>
                    {
                        columns.Add().Field("LocCode").Width("100px");
                        columns.Add().Field("LocName").Width("200px");
                    })
                    .FilterFields(new string[] { "LocCode", "LocName" })
                    .Filter(FilterType.Contains)
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("LocationList", "Setup"));
                })
                .HtmlAttributes(new { @style = "width:100%",@readonly = true })
                )
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Item")
                @(Html.Kendo().MultiColumnComboBox()
                    .Name("ItemId")
                    .AutoBind(false)
                    .Placeholder("Select Item...")
                    .DataTextField("Item")
                    .DataValueField("ItemId")
                    .Columns(columns =>
                    {
                        columns.Add().Field("Item").Width("300px");
                        columns.Add().Field("ItemBrand").Width("200px");
                        columns.Add().Field("ItemProduct").Width("200px");
                    })
                    .Suggest(true)
                    .Filter(FilterType.Contains)
                    .FilterFields(new string[] { "Item", "ItemBrand", "ItemProduct" })
                    //.MinLength(3)
                    .Events(e => e.Change("SKUChange"))
                    .DataSource(dataSource =>
                    {
                        dataSource.Read(read => read.Action("ItemByNatureList", "Procurement").Data("filterItem"));
                    })
                    .IgnoreCase(true)
                    .HtmlAttributes(new { @style = "width:100%", @required = true })
                    )
                @Html.ValidationMessage("ItemId")
            </div>
            <div class="col-md-3 col-sm-3 costtype">
                @Html.Label("Cost Type")
                @(Html.Kendo().DropDownList()
                .Name("CostTypeId")
                .OptionLabel("Select CostType")
                .DataValueField("CostTypeId")
                .DataTextField("CostType")
                .DataSource(ds =>
                {
                ds.Read(read => read.Action("CostTypeList", "Procurement"));
                })
                .HtmlAttributes(new { @style = "width:100%", @required = true }))
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Brand")
                @(Html.Kendo()
                    .TextBox()
                    .Name("Brand")
                    .Enable(false)
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.Label("Product")
                @(Html.Kendo()
                    .TextBox()
                    .Name("Product")
                    .Enable(false)
                    .HtmlAttributes(new { @style = "width:100%" })
                    )
            </div>
            <div class="col-md-3">
                @Html.Label("Qty")
                @(Html.Kendo()
               .NumericTextBox()
               .Name("Qty")
               .Min(0)
               .Value(0)
               .HtmlAttributes(new { @style = "width:100%" }))
            </div>
            <div class="col-md-3">
                @Html.Label("Rate")
                @(Html.Kendo()
               .NumericTextBox()
               .Name("Rate")
               .Min(0)
               .Value(0)
               .HtmlAttributes(new { @style = "width:100%" }))
            </div>
            <div class="col-md-3">
                @Html.Label("Discount")
                @(Html.Kendo()
               .NumericTextBox()
               .Name("Discount")
               .Min(0)
               .Value(0)
               .HtmlAttributes(new { @style = "width:100%" }))
            </div>

            <div class="col-md-3">
                <br />
                <button class="k-button margin-10" type="button" onclick="addToGrid()">
                    <i class="fas fa-plus"></i>&nbsp; Add
                </button>
            </div>
        </div>
    </div>
    <div class="row">
        @(Html.Kendo()
        .Grid<ProPODetailVM>()
        .Name("gridMTRDetail")
        .Columns(columns =>
        {
            columns.Bound(c => c.Item);
            columns.Bound(c => c.Qty);
            columns.Bound(c => c.Rate);
            columns.Bound(c => c.Disc);
            columns.ForeignKey(c => c.LocId, (System.Collections.IEnumerable)ViewData["LocVD"], "LocId", "LocName").Title("Location");
            columns.Command(c => { c.Destroy(); }).Width(100);
        })
        .Sortable()
        .Pageable()
        .Scrollable()
        .AutoBind(false)
        .Navigatable()
        .ToolBar(t => t.Save())
        .Editable(e => e.Mode(GridEditMode.InCell))
        .Events(e => e.SaveChanges("onSaveChanges"))
        .HtmlAttributes(new { style = "height:300px;" })

        .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .Events(e => e.Error("error_handler"))
        .PageSize(100)
        .Model(model =>
        {
            model.Id(m => m.PODtlId);
            model.Field(m => m.ItemId).Editable(false);
            model.Field(m => m.Item).Editable(false);
            model.Field(m => m.Qty);
            model.Field(m => m.Rate);
            model.Field(m => m.Disc);
            model.Field(m => m.Tax).Editable(false);
            model.Field(m => m.LocId).Editable(false);
        })
        .Read(read => read.Action("PO_Read", "Procurement"))
        .Create(create => create.Action("PO_Create", "Procurement").Data("masterData"))
        .Update(create => create.Action("PO_Update", "Procurement").Data("masterData"))
        ))
    </div>
</div>
@Html.Partial("~/Views/Report/_Report.cshtml")
<script>
    $(document).ready(function () {
        //$('#m_18000000').addClass('active');
        //$('#d_18000000').css("display", "block");
        //$('#m_18060000').addClass('active');
        //$('#a_18060000').addClass('active');
        resizeGrid();

    });

    function filterSubsidiary() {
        return {
            PId: 458,
            str: ""
        }
    }

    function natureChange() {
        $("#gridMTRDetail").data("kendoGrid").dataSource.data([]);
        $('#ItemId').data('kendoMultiColumnComboBox').dataSource.read();
        $('#Brand').val("");
        $('#Product').val("");
        if ($('#NatureId').val() == 3) {
            $(".costtype").css("display", "block");
        }
        else {
            $(".costtype").css("display", "none");
        }
    }

    function SKUChange() {
        var data = $('#ItemId').data('kendoMultiColumnComboBox').dataItem();
        if (data != null) {
            $('#Brand').val(data.ItemBrand);
            $('#Product').val(data.ItemProduct);
        }
    }

    function filterItem() {
        return {
            NatureId: $('#NatureId').val()
            //filterModel: $("#ItemId").data("kendoMultiColumnComboBox").input.val() || ""
        }
    }

    var gridElement = $("#gridMTRDetail");

    function masterData() {
        return {
            RequiredDate: $('#RequiredDate').val(),
            DeliveryAddress: $('#DeliveryAddress').val(),
            MTRId: $('#MTRId').val() || 0,
            Remarks: $('#Remarks').val(),
            SuppId: $('#SuppId').val(),
            NatureId: $('#NatureId').val()
        }
    }

    function onSaveChanges(e) {

        var dat = $("#gridMTRDetail").data("kendoGrid").dataSource.data();
        if (dat.length == 0) {
            dia.content("Nothing to Save");
            dia.open();
            e.preventDefault();
            return;
        }

        if (!confirm("Are you sure that you want to proceed?")) {
            e.preventDefault();
            return;
        }
    }

    function addToGrid() {
        var dataSource = $('#gridMTRDetail').data('kendoGrid').dataSource;
        var itm = $('#ItemId').data('kendoMultiColumnComboBox').dataItem();
        var costtypeId = 0;
        if ($('#NatureId').val() == 3) {
            costtypeId = $('#CostTypeId').val();
        }
        var dat = {
            MTRDtlId: 0,
            Item: itm.Item,
            ItemId: itm.ItemId,
            ItemBrand: itm.ItemBrand,
            ItemProduct: itm.ItemProduct,
            Qty: $('#Qty').val() || 0,
            Rate: $('#Rate').val() || 0,
            Disc: $('#Discount').val() || 0,
            LocId: $('#LocId').val() || 0,
            CostTypeId: costtypeId
        };
        if (dat.ItemId > 0 /*&& dat.Rate > 0*/ && dat.LocId > 0 && dat.Qty > 0) {

            dat.dirty = true;
            dataSource.add(dat);
            resetFields();
        }
        else {
            alert('Please Select Item');
        }
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors,
                function (key, value) {
                    if ('Msg' == key) {
                        $.each(value.errors,
                            function () {
                                message += this;
                            });
                    } else {
                        $.each(value.errors,
                            function () {
                                message += this;
                            });
                    }
                });
            if (message > 0) {
                $.confirm({
                    title: 'Saved Successfully!',
                    content: 'Do you want to print?',
                    type: 'red',
                    typeAnimated: true,
                    icon: 'fas fa-check',
                    buttons: {
                        Print: function () {
                            $("#rpt").val("ProPO");
                            $("#TransId").val(message);
                            $("#rptForm").submit();
                        },
                        Cancel: function () {
                        }
                    }
                });
                $('#gridMTRDetail').data('kendoGrid').dataSource.data([]);
            } else {
                var dia = $("#msgBox").data("kendoDialog");
                dia.title("Error");
                dia.content(message);
                dia.open();
            }
        }
    }

    function resetFields() {
        $('#ItemId').data('kendoMultiColumnComboBox').value("");
        $('#Qty').data('kendoNumericTextBox').value(0);
        $('#CostTypeId').data('kendoDropDownList').value("");
        $('#Rate').data('kendoNumericTextBox').value(0);
        $('#Discount').data('kendoNumericTextBox').value(0);
        $('#Product').val("");
        $('#Brand').val("");
    }

    function resizeGrid() {
        var height = $(window).innerHeight() - $('header').innerHeight() - 180;
        if (height < 200) {
            height = 200;
        }
        else if (height > 910) {
            height = 910;
        }
        $("#gridMTRDetail").css("height", height);
        gridElement.data("kendoGrid").resize();
    }


    $(window).resize(function () {
        resizeGrid();
    });

</script>

